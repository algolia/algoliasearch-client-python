import '{{{import}}}';
import 'package:algolia_test/algolia_test.dart';
import 'package:test/test.dart';
import 'package:test_api/hooks.dart';

void main() {
  {{#blocksClient}}

  {{#tests}}
  test('{{{testName}}}', () { 
    {{#autoCreateClient}}
    final client =  {{client}}(
      appId: 'appId', 
      apiKey: 'apiKey',
      {{#hasRegionalHost}}
      region: '{{defaultRegion}}',
      {{/hasRegionalHost}}
    );
    {{/autoCreateClient}}    
    {{#steps}}    
    {{#isError}}
    expectError(
      '{{{expectedError}}}',
      () {
        {{> client/step}}
      },
    );
    {{/isError}}
    {{^isError}}
    {{#isCreateClient}}
    {{> client/create_client}}
    {{/isCreateClient}}
    {{#isMethod}}
     runTest(
        builder: (requester) => {{client}}(
            appId: client.appId,
            apiKey: client.apiKey,
            {{#hasRegionalHost}}
            region: client.region,
            {{/hasRegionalHost}}
            options: ClientOptions(requester: requester),
        ),
        call: (client) => client.{{path}}(
              {{#parametersWithDataType}}
              {{> request_param}}
              {{/parametersWithDataType}}
        ),
        intercept: (request) {  
            {{#match}}
            {{#testUserAgent}}
                TestHandle.current.markSkipped('User agent added using an interceptor');
            {{/testUserAgent}}
            {{#testTimeouts}}
                expect({{{match.parametersWithDataTypeMap.responseTimeout.value}}}, request.timeout.inMilliseconds);
            {{/testTimeouts}}
            {{#testHost}}
                expect(request.host.url, '{{{match}}}');
            {{/testHost}}        
            {{/match}}
        },
    );
    {{/isMethod}}
    {{/isError}}
    {{/steps}}
    }
  );
  {{/tests}}
  {{/blocksClient}}
}
