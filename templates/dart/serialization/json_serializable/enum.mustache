import 'package:json_annotation/json_annotation.dart';

{{#description}}/// {{{description}}}{{/description}}
{{#isDeprecated}}
@Deprecated('{{{classname}}} has been deprecated')
{{/isDeprecated}}
@JsonEnum(valueField: 'raw')
enum {{{classname}}} {
{{#allowableValues}}
{{#enumVars}}
  {{#lambda.camelcase}}{{&name}}}{{/lambda.camelcase}}({{#isString}}r{{/isString}}{{{value}}}){{^-last}},{{/-last}}{{#-last}};{{/-last}}
{{/enumVars}}
{{/allowableValues}}

  const {{{classname}}}(this.raw);
  final dynamic raw;

  dynamic toJson() => raw;

  static {{{classname}}} fromJson(dynamic json) {
    for (final value in values) {
      if (value.raw == json) return value;
    }
    throw ArgumentError.value(json, "raw", "No enum value with that value");
  }

  @override
  String toString() => raw.toString();
}
