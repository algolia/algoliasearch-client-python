version: 2.1

aliases:
  - &upgrade_pip
    name: Upgrades pip
    command: |
      pip install --user --upgrade pip

defaults: &defaults
  working_directory: ~/algoliasearch-client-python
  parameters:
    version:
      type: string
  docker:
    - image: circleci/python:<< parameters.version >>

jobs:
  test:
    description: Runs unit tests against python << parameters.version >>
    <<: *defaults
    steps:
      - checkout
      - run: *upgrade_pip
      - run:
          name: Install dependencies
          command: |
            pip install --user -r requirements/requirements-testing.txt
      - run:
          name: Run unit sync tests
          command: |
            sh tests/run_tests_sync.sh
      - run:
          name: Run unit async tests
          command: |
            if [[ "$(python -V)" == "Python 3."* ]]; then sh tests/run_tests_async.sh; fi

  format:
    description: Run formatter and linter checks
    <<: *defaults
    steps:
      - checkout
      - run: *upgrade_pip
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements/requirements-code-style-checker.txt
      - run:
          name: Run formatter check
          command: |
            black algoliasearch tests
      - run:
          name: Run linter check
          command: |
            flake8 algoliasearch tests

  types:
    description: Runs types tests
    <<: *defaults
    steps:
      - checkout
      - run: *upgrade_pip
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements/requirements-static-type-checker.txt
      - run:
          name: Run type tests
          command: |
            mypy --config-file mypy.ini -p algoliasearch --disallow-untyped-calls

  release:
    description: Release the Python client
    <<: *defaults
    steps:
      - checkout
      - run: *upgrade_pip
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt
      - run:
          name: Prepare the dist/ build for release
          command: |
            python setup.py sdist bdist_wheel
      - run:
          name: Check the dist/ build before release
          command: |
            twine check dist/*
      - run:
          name: Publish the release to PyPI
          command: |
            if [[ -z "$PYPI_USER" ]];     then echo '$PYPI_USER is not set';     exit 1; fi
            if [[ -z "$PYPI_PASSWORD" ]]; then echo '$PYPI_PASSWORD is not set'; exit 1; fi
            twine upload --username $PYPI_USER --password $PYPI_PASSWORD $dist/*

workflows:
  version: 2
  ci:
    jobs:
      - test:
          name: 'test_27'
          version: '2.7.18'
      - test:
          name: 'test_34'
          version: '3.4.10'
      - test:
          name: 'test_35'
          version: '3.5.9'
      - test:
          name: 'test_36'
          version: '3.6.9'
      - test:
          name: 'test_37'
          version: '3.7.7'
      - test:
          name: 'test_38'
          version: '3.8.2'
      - format:
          name: 'format'
          version: '3.8.2'
      - types:
          name: 'types'
          version: '3.8.2'
      - release:
          version: '3.8.2'
          requires:
            - test_27
            - test_34
            - test_35
            - test_36
            - test_37
            - test_38
            - format
            - types
          filters:
            branches:
              only: master
            tags:
              only: /^[1-9]+.[0-9]+.[0-9]+.*/
