// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_search/src/model/hit.dart';

import 'package:collection/collection.dart';
import 'package:json_annotation/json_annotation.dart';

part 'search_hits.g.dart';

@JsonSerializable(createFieldMap: true)
final class SearchHits extends DelegatingMap<String, dynamic> {
  /// Returns a new [SearchHits] instance.
  const SearchHits({
    required this.hits,
    required this.query,
    required this.params,
    Map<String, dynamic> additionalProperties = const {},
  }) : super(additionalProperties);

  @JsonKey(name: r'hits')
  final List<Hit> hits;

  /// Text to search for in an index.
  @JsonKey(name: r'query')
  final String query;

  /// URL-encoded string of all search parameters.
  @JsonKey(name: r'params')
  final String params;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SearchHits &&
          other.hits == hits &&
          other.query == query &&
          other.params == params &&
          const MapEquality<String, dynamic>().equals(this, this);

  @override
  int get hashCode =>
      hits.hashCode +
      query.hashCode +
      params.hashCode +
      const MapEquality<String, dynamic>().hash(this);

  factory SearchHits.fromJson(Map<String, dynamic> json) {
    final instance = _$SearchHitsFromJson(json);
    final additionalProperties = Map<String, dynamic>.from(json)
      ..removeWhere((key, value) => _$SearchHitsFieldMap.containsKey(key));
    return SearchHits(
      hits: instance.hits,
      query: instance.query,
      params: instance.params,
      additionalProperties: additionalProperties,
    );
  }

  Map<String, dynamic> toJson() => _$SearchHitsToJson(this)..addAll(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
