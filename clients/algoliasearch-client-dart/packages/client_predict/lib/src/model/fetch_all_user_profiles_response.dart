// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_predict/src/model/user_profile.dart';

import 'package:json_annotation/json_annotation.dart';

part 'fetch_all_user_profiles_response.g.dart';

@JsonSerializable()
final class FetchAllUserProfilesResponse {
  /// Returns a new [FetchAllUserProfilesResponse] instance.
  const FetchAllUserProfilesResponse({
    required this.users,
    this.previousPageToken,
    this.nextPageToken,
  });

  @JsonKey(name: r'users')
  final List<UserProfile> users;

  /// The token is used to navigate backward in the user list. To navigate from the current user list to the previous page, the API generates the previous page token and it sends the token in the response, beside the current user list. NOTE: This body param cannot be used with `nextPageToken` at the same time.
  @JsonKey(name: r'previousPageToken')
  final String? previousPageToken;

  /// The token is used to navigate forward in the user list. To navigate from the current user list to the next page, the API generates the next page token and it sends the token in the response, beside the current user list. NOTE: This body param cannot be used with `previousPageToken` at the same time.
  @JsonKey(name: r'nextPageToken')
  final String? nextPageToken;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FetchAllUserProfilesResponse &&
          other.users == users &&
          other.previousPageToken == previousPageToken &&
          other.nextPageToken == nextPageToken;

  @override
  int get hashCode =>
      users.hashCode + previousPageToken.hashCode + nextPageToken.hashCode;

  factory FetchAllUserProfilesResponse.fromJson(Map<String, dynamic> json) =>
      _$FetchAllUserProfilesResponseFromJson(json);

  Map<String, dynamic> toJson() => _$FetchAllUserProfilesResponseToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
