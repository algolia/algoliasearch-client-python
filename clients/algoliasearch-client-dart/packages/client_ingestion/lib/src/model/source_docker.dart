// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_ingestion/src/model/docker_image_type.dart';
import 'package:algolia_client_ingestion/src/model/docker_registry.dart';

import 'package:json_annotation/json_annotation.dart';

part 'source_docker.g.dart';

@JsonSerializable()
final class SourceDocker {
  /// Returns a new [SourceDocker] instance.
  const SourceDocker({
    required this.registry,
    required this.image,
    this.version,
    required this.imageType,
    this.outputFile,
    required this.configuration,
  });

  @JsonKey(name: r'registry')
  final DockerRegistry registry;

  /// The name of the image to pull.
  @JsonKey(name: r'image')
  final String image;

  /// The version of the image, defaults to `latest`.
  @JsonKey(name: r'version')
  final String? version;

  @JsonKey(name: r'imageType')
  final DockerImageType imageType;

  /// The full name of the output file.
  @JsonKey(name: r'outputFile')
  final String? outputFile;

  /// The configuration of the spec.
  @JsonKey(name: r'configuration')
  final Object configuration;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SourceDocker &&
          other.registry == registry &&
          other.image == image &&
          other.version == version &&
          other.imageType == imageType &&
          other.outputFile == outputFile &&
          other.configuration == configuration;

  @override
  int get hashCode =>
      registry.hashCode +
      image.hashCode +
      version.hashCode +
      imageType.hashCode +
      outputFile.hashCode +
      configuration.hashCode;

  factory SourceDocker.fromJson(Map<String, dynamic> json) =>
      _$SourceDockerFromJson(json);

  Map<String, dynamic> toJson() => _$SourceDockerToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
