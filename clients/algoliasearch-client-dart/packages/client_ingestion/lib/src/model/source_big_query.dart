// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_ingestion/src/model/big_query_data_type.dart';

import 'package:json_annotation/json_annotation.dart';

part 'source_big_query.g.dart';

@JsonSerializable()
final class SourceBigQuery {
  /// Returns a new [SourceBigQuery] instance.
  const SourceBigQuery({
    required this.projectID,
    required this.datasetID,
    this.dataType,
    this.table,
    this.tablePrefix,
    this.customSQLRequest,
    this.uniqueIDColumn,
  });

  /// Project ID of the BigQuery Source.
  @JsonKey(name: r'projectID')
  final String projectID;

  /// Dataset ID of the BigQuery Source.
  @JsonKey(name: r'datasetID')
  final String datasetID;

  @JsonKey(name: r'dataType')
  final BigQueryDataType? dataType;

  /// Table name (for default BQ).
  @JsonKey(name: r'table')
  final String? table;

  /// Table prefix (for Google Analytics).
  @JsonKey(name: r'tablePrefix')
  final String? tablePrefix;

  /// Custom SQL request to extract data from the BigQuery table.
  @JsonKey(name: r'customSQLRequest')
  final String? customSQLRequest;

  /// The name of the column that contains the unique ID, used as `objectID` in Algolia.
  @JsonKey(name: r'uniqueIDColumn')
  final String? uniqueIDColumn;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SourceBigQuery &&
          other.projectID == projectID &&
          other.datasetID == datasetID &&
          other.dataType == dataType &&
          other.table == table &&
          other.tablePrefix == tablePrefix &&
          other.customSQLRequest == customSQLRequest &&
          other.uniqueIDColumn == uniqueIDColumn;

  @override
  int get hashCode =>
      projectID.hashCode +
      datasetID.hashCode +
      dataType.hashCode +
      table.hashCode +
      tablePrefix.hashCode +
      customSQLRequest.hashCode +
      uniqueIDColumn.hashCode;

  factory SourceBigQuery.fromJson(Map<String, dynamic> json) =>
      _$SourceBigQueryFromJson(json);

  Map<String, dynamic> toJson() => _$SourceBigQueryToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
