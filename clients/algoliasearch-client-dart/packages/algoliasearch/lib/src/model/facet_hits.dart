// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element

import 'package:json_annotation/json_annotation.dart';

part 'facet_hits.g.dart';

@JsonSerializable()
final class FacetHits {
  /// Returns a new [FacetHits] instance.
  const FacetHits({
    required this.value,
    required this.highlighted,
    required this.count,
  });

  /// Facet value.
  @JsonKey(name: r'value')
  final String value;

  /// Markup text with `facetQuery` matches highlighted.
  @JsonKey(name: r'highlighted')
  final String highlighted;

  /// Number of records containing this facet value. This takes into account the extra search parameters specified in the query. Like for a regular search query, the [counts may not be exhaustive](https://support.algolia.com/hc/en-us/articles/4406975248145-Why-are-my-facet-and-hit-counts-not-accurate-).
  @JsonKey(name: r'count')
  final int count;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FacetHits &&
          other.value == value &&
          other.highlighted == highlighted &&
          other.count == count;

  @override
  int get hashCode => value.hashCode + highlighted.hashCode + count.hashCode;

  factory FacetHits.fromJson(Map<String, dynamic> json) =>
      _$FacetHitsFromJson(json);

  Map<String, dynamic> toJson() => _$FacetHitsToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
