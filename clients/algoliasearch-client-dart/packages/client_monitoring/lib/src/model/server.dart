// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
// ignore_for_file: unused_element
import 'package:algolia_client_monitoring/src/model/region.dart';
import 'package:algolia_client_monitoring/src/model/server_status.dart';
import 'package:algolia_client_monitoring/src/model/type.dart';

import 'package:json_annotation/json_annotation.dart';

part 'server.g.dart';

@JsonSerializable()
final class Server {
  /// Returns a new [Server] instance.
  const Server({
    this.name,
    this.region,
    this.isSlave,
    this.isReplica,
    this.cluster,
    this.status,
    this.type,
  });

  /// Server name.
  @JsonKey(name: r'name')
  final String? name;

  @JsonKey(name: r'region')
  final Region? region;

  /// Included to support legacy applications. Do not rely on this attribute being present in the response. Use `is_replica` instead.
  @Deprecated('isSlave has been deprecated')
  @JsonKey(name: r'is_slave')
  final bool? isSlave;

  /// Indicates whether this server is a replica of another server.
  @JsonKey(name: r'is_replica')
  final bool? isReplica;

  /// Name of the cluster to which this server belongs.
  @JsonKey(name: r'cluster')
  final String? cluster;

  @JsonKey(name: r'status')
  final ServerStatus? status;

  @JsonKey(name: r'type')
  final Type? type;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Server &&
          other.name == name &&
          other.region == region &&
          other.isReplica == isReplica &&
          other.cluster == cluster &&
          other.status == status &&
          other.type == type;

  @override
  int get hashCode =>
      name.hashCode +
      region.hashCode +
      isReplica.hashCode +
      cluster.hashCode +
      status.hashCode +
      type.hashCode;

  factory Server.fromJson(Map<String, dynamic> json) => _$ServerFromJson(json);

  Map<String, dynamic> toJson() => _$ServerToJson(this);

  @override
  String toString() {
    return toJson().toString();
  }
}
