// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

import type { BaseSearchResponseRedirect } from './baseSearchResponseRedirect';
import type { FacetsStats } from './facetsStats';
import type { RenderingContent } from './renderingContent';

export type BaseSearchResponse = {
  /**
   * A/B test ID. This is only included in the response for indices that are part of an A/B test.
   */
  abTestID?: number;

  /**
   * Variant ID. This is only included in the response for indices that are part of an A/B test.
   */
  abTestVariantID?: number;

  /**
   * Computed geographical location.
   */
  aroundLatLng?: string;

  /**
   * Automatically-computed radius.
   */
  automaticRadius?: string;

  /**
   * Indicates whether the facet count is exhaustive (exact) or approximate.
   */
  exhaustiveFacetsCount?: boolean;

  /**
   * Indicates whether the number of hits `nbHits` is exhaustive (exact) or approximate.
   */
  exhaustiveNbHits?: boolean;

  /**
   * Indicates whether the search for typos was exhaustive (exact) or approximate.
   */
  exhaustiveTypo?: boolean;

  /**
   * Mapping of each facet name to the corresponding facet counts.
   */
  facets?: Record<string, Record<string, number>>;

  /**
   * Statistics for numerical facets.
   */
  facets_stats?: Record<string, FacetsStats>;

  /**
   * Number of hits per page.
   */
  hitsPerPage: number;

  /**
   * Index name used for the query.
   */
  index?: string;

  /**
   * Index name used for the query. During A/B testing, the targeted index isn\'t always the index used by the query.
   */
  indexUsed?: string;

  /**
   * Warnings about the query.
   */
  message?: string;

  /**
   * Number of hits the search query matched.
   */
  nbHits: number;

  /**
   * Number of pages of results for the current query.
   */
  nbPages: number;

  /**
   * Number of hits selected and sorted by the relevant sort algorithm.
   */
  nbSortedHits?: number;

  /**
   * Page to retrieve (the first page is `0`, not `1`).
   */
  page: number;

  redirect?: BaseSearchResponseRedirect;

  /**
   * Post-[normalization](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/#what-does-normalization-mean) query string that will be searched.
   */
  parsedQuery?: string;

  /**
   * Time the server took to process the request, in milliseconds.
   */
  processingTimeMS: number;

  /**
   * Markup text indicating which parts of the original query have been removed to retrieve a non-empty result set.
   */
  queryAfterRemoval?: string;

  /**
   * Host name of the server that processed the request.
   */
  serverUsed?: string;

  /**
   * Lets you store custom data in your indices.
   */
  userData?: any | null;

  renderingContent?: RenderingContent;
};
