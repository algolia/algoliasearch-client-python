/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.ingestion

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

/**
 * SourceInput
 *
 * Implementations:
 * - [SourceBigCommerce]
 * - [SourceBigQuery]
 * - [SourceCSV]
 * - [SourceCommercetools]
 * - [SourceDocker]
 * - [SourceJSON]
 */
@Serializable(SourceInputSerializer::class)
public sealed interface SourceInput {

  public companion object {
  }
}

internal class SourceInputSerializer : KSerializer<SourceInput> {

  override val descriptor: SerialDescriptor = buildClassSerialDescriptor("SourceInput")

  override fun serialize(encoder: Encoder, value: SourceInput) {
    when (value) {
      is SourceBigCommerce -> SourceBigCommerce.serializer().serialize(encoder, value)
      is SourceBigQuery -> SourceBigQuery.serializer().serialize(encoder, value)
      is SourceCSV -> SourceCSV.serializer().serialize(encoder, value)
      is SourceCommercetools -> SourceCommercetools.serializer().serialize(encoder, value)
      is SourceDocker -> SourceDocker.serializer().serialize(encoder, value)
      is SourceJSON -> SourceJSON.serializer().serialize(encoder, value)
    }
  }

  override fun deserialize(decoder: Decoder): SourceInput {
    val codec = decoder.asJsonDecoder()
    val tree = codec.decodeJsonElement()

    // deserialize SourceBigCommerce
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(SourceBigCommerce.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize SourceBigCommerce (error: ${e.message})")
      }
    }

    // deserialize SourceBigQuery
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(SourceBigQuery.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize SourceBigQuery (error: ${e.message})")
      }
    }

    // deserialize SourceCSV
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(SourceCSV.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize SourceCSV (error: ${e.message})")
      }
    }

    // deserialize SourceCommercetools
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(SourceCommercetools.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize SourceCommercetools (error: ${e.message})")
      }
    }

    // deserialize SourceDocker
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(SourceDocker.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize SourceDocker (error: ${e.message})")
      }
    }

    // deserialize SourceJSON
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(SourceJSON.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize SourceJSON (error: ${e.message})")
      }
    }

    throw AlgoliaClientException("Failed to deserialize json element: $tree")
  }
}
