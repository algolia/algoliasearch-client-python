/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.abtesting

import kotlinx.serialization.*
import kotlinx.serialization.json.*

/**
 * Variant
 *
 * @param averageClickPosition Average click position for the variant.
 * @param clickCount Distinct click count for the variant.
 * @param clickThroughRate Click through rate for the variant.
 * @param conversionCount Distinct conversion count for the variant.
 * @param conversionRate Conversion rate for the variant.
 * @param description The A/B test description.
 * @param index The index performing the A/B test.
 * @param noResultCount The number of occurrences.
 * @param outlierTrackedSearchesCount Count of the tracked searches attributed to outlier traffic that were removed from the A/B test.
 * @param outlierUsersCount Count of users attributed to outlier traffic that were removed from the A/B test.
 * @param searchCount The number of search during the A/B test.
 * @param trackedSearchCount The number of tracked search click.
 * @param trafficPercentage The traffic percentage for the A/B test.
 * @param userCount The number of user during the A/B test.
 */
@Serializable
public data class Variant(

  /** Average click position for the variant. */
  @SerialName(value = "averageClickPosition") val averageClickPosition: Int,

  /** Distinct click count for the variant. */
  @SerialName(value = "clickCount") val clickCount: Int,

  /** Click through rate for the variant. */
  @SerialName(value = "clickThroughRate") val clickThroughRate: Double,

  /** Distinct conversion count for the variant. */
  @SerialName(value = "conversionCount") val conversionCount: Int,

  /** Conversion rate for the variant. */
  @SerialName(value = "conversionRate") val conversionRate: Double,

  /** The A/B test description. */
  @SerialName(value = "description") val description: String,

  /** The index performing the A/B test. */
  @SerialName(value = "index") val index: String,

  /** The number of occurrences. */
  @SerialName(value = "noResultCount") val noResultCount: Int,

  /** Count of the tracked searches attributed to outlier traffic that were removed from the A/B test. */
  @SerialName(value = "outlierTrackedSearchesCount") val outlierTrackedSearchesCount: Int,

  /** Count of users attributed to outlier traffic that were removed from the A/B test. */
  @SerialName(value = "outlierUsersCount") val outlierUsersCount: Int,

  /** The number of search during the A/B test. */
  @SerialName(value = "searchCount") val searchCount: Int,

  /** The number of tracked search click. */
  @SerialName(value = "trackedSearchCount") val trackedSearchCount: Int,

  /** The traffic percentage for the A/B test. */
  @SerialName(value = "trafficPercentage") val trafficPercentage: Int,

  /** The number of user during the A/B test. */
  @SerialName(value = "userCount") val userCount: Int,
)
