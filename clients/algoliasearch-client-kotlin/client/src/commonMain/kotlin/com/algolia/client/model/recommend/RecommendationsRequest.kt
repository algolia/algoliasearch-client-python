/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.recommend

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

/**
 * RecommendationsRequest
 *
 * Implementations:
 * - [RecommendationsQuery]
 * - [TrendingFacetsQuery]
 * - [TrendingItemsQuery]
 */
@Serializable(RecommendationsRequestSerializer::class)
public sealed interface RecommendationsRequest {

  public companion object {
  }
}

internal class RecommendationsRequestSerializer : KSerializer<RecommendationsRequest> {

  override val descriptor: SerialDescriptor = buildClassSerialDescriptor("RecommendationsRequest")

  override fun serialize(encoder: Encoder, value: RecommendationsRequest) {
    when (value) {
      is RecommendationsQuery -> RecommendationsQuery.serializer().serialize(encoder, value)
      is TrendingFacetsQuery -> TrendingFacetsQuery.serializer().serialize(encoder, value)
      is TrendingItemsQuery -> TrendingItemsQuery.serializer().serialize(encoder, value)
    }
  }

  override fun deserialize(decoder: Decoder): RecommendationsRequest {
    val codec = decoder.asJsonDecoder()
    val tree = codec.decodeJsonElement()

    // deserialize RecommendationsQuery
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(RecommendationsQuery.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize RecommendationsQuery (error: ${e.message})")
      }
    }

    // deserialize TrendingFacetsQuery
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(TrendingFacetsQuery.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize TrendingFacetsQuery (error: ${e.message})")
      }
    }

    // deserialize TrendingItemsQuery
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(TrendingItemsQuery.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize TrendingItemsQuery (error: ${e.message})")
      }
    }

    throw AlgoliaClientException("Failed to deserialize json element: $tree")
  }
}
