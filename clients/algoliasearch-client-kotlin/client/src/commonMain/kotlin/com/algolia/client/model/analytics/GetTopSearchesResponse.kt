/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.analytics

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

/**
 * GetTopSearchesResponse
 */
@Serializable(GetTopSearchesResponseSerializer::class)
public sealed interface GetTopSearchesResponse {

  public companion object {

    /**
     * TopSearchesResponse
     *
     * @param searches A list of top searches with their count.
     */
    public fun TopSearchesResponse(
      searches: List<TopSearch>,
    ): TopSearchesResponse = com.algolia.client.model.analytics.TopSearchesResponse(
      searches = searches,
    )

    /**
     * TopSearchesResponseWithAnalytics
     *
     * @param searches A list of top searches with their count and analytics.
     */
    public fun TopSearchesResponseWithAnalytics(
      searches: List<TopSearchWithAnalytics>,
    ): TopSearchesResponseWithAnalytics = com.algolia.client.model.analytics.TopSearchesResponseWithAnalytics(
      searches = searches,
    )
  }
}

internal class GetTopSearchesResponseSerializer : KSerializer<GetTopSearchesResponse> {

  override val descriptor: SerialDescriptor = buildClassSerialDescriptor("GetTopSearchesResponse")

  override fun serialize(encoder: Encoder, value: GetTopSearchesResponse) {
    when (value) {
      is TopSearchesResponse -> TopSearchesResponse.serializer().serialize(encoder, value)
      is TopSearchesResponseWithAnalytics -> TopSearchesResponseWithAnalytics.serializer().serialize(encoder, value)
    }
  }

  override fun deserialize(decoder: Decoder): GetTopSearchesResponse {
    val codec = decoder.asJsonDecoder()
    val tree = codec.decodeJsonElement()

    // deserialize TopSearchesResponse
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement<TopSearchesResponse>(tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize TopSearchesResponse (error: ${e.message})")
      }
    }

    // deserialize TopSearchesResponseWithAnalytics
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement<TopSearchesResponseWithAnalytics>(tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize TopSearchesResponseWithAnalytics (error: ${e.message})")
      }
    }

    throw AlgoliaClientException("Failed to deserialize json element: $tree")
  }
}
