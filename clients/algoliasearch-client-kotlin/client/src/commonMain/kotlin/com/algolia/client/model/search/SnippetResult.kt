/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.search

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*
import kotlin.jvm.JvmInline

/**
 * SnippetResult
 *
 * Implementations:
 * - [List<SnippetResultOption>] - *[SnippetResult.of]*
 * - [SnippetResultOption]
 */
@Serializable(SnippetResultSerializer::class)
public sealed interface SnippetResult {

  @JvmInline
  public value class ListOfSnippetResultOptionValue(public val value: List<SnippetResultOption>) : SnippetResult

  public companion object {

    /** [SnippetResult] as [List<SnippetResultOption>] Value. */
    public fun of(value: List<SnippetResultOption>): SnippetResult {
      return ListOfSnippetResultOptionValue(value)
    }
  }
}

internal class SnippetResultSerializer : KSerializer<SnippetResult> {

  override val descriptor: SerialDescriptor = buildClassSerialDescriptor("SnippetResult")

  override fun serialize(encoder: Encoder, value: SnippetResult) {
    when (value) {
      is SnippetResult.ListOfSnippetResultOptionValue -> ListSerializer(SnippetResultOption.serializer()).serialize(encoder, value.value)
      is SnippetResultOption -> SnippetResultOption.serializer().serialize(encoder, value)
    }
  }

  override fun deserialize(decoder: Decoder): SnippetResult {
    val codec = decoder.asJsonDecoder()
    val tree = codec.decodeJsonElement()

    // deserialize List<SnippetResultOption>
    if (tree is JsonArray) {
      try {
        val value = codec.json.decodeFromJsonElement(ListSerializer(SnippetResultOption.serializer()), tree)
        return SnippetResult.of(value)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize List<SnippetResultOption> (error: ${e.message})")
      }
    }

    // deserialize SnippetResultOption
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(SnippetResultOption.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize SnippetResultOption (error: ${e.message})")
      }
    }

    throw AlgoliaClientException("Failed to deserialize json element: $tree")
  }
}
