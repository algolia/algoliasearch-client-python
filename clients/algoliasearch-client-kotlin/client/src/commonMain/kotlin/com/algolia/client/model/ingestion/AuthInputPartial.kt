/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.ingestion

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

/**
 * AuthInputPartial
 *
 * Implementations:
 * - [AuthAPIKeyPartial]
 * - [AuthAlgoliaPartial]
 * - [AuthBasicPartial]
 * - [AuthGoogleServiceAccountPartial]
 * - [AuthOAuthPartial]
 */
@Serializable(AuthInputPartialSerializer::class)
public sealed interface AuthInputPartial {

  public companion object {
  }
}

internal class AuthInputPartialSerializer : KSerializer<AuthInputPartial> {

  override val descriptor: SerialDescriptor = buildClassSerialDescriptor("AuthInputPartial")

  override fun serialize(encoder: Encoder, value: AuthInputPartial) {
    when (value) {
      is AuthAPIKeyPartial -> AuthAPIKeyPartial.serializer().serialize(encoder, value)
      is AuthAlgoliaPartial -> AuthAlgoliaPartial.serializer().serialize(encoder, value)
      is AuthBasicPartial -> AuthBasicPartial.serializer().serialize(encoder, value)
      is AuthGoogleServiceAccountPartial -> AuthGoogleServiceAccountPartial.serializer().serialize(encoder, value)
      is AuthOAuthPartial -> AuthOAuthPartial.serializer().serialize(encoder, value)
    }
  }

  override fun deserialize(decoder: Decoder): AuthInputPartial {
    val codec = decoder.asJsonDecoder()
    val tree = codec.decodeJsonElement()

    // deserialize AuthAPIKeyPartial
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(AuthAPIKeyPartial.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize AuthAPIKeyPartial (error: ${e.message})")
      }
    }

    // deserialize AuthAlgoliaPartial
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(AuthAlgoliaPartial.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize AuthAlgoliaPartial (error: ${e.message})")
      }
    }

    // deserialize AuthBasicPartial
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(AuthBasicPartial.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize AuthBasicPartial (error: ${e.message})")
      }
    }

    // deserialize AuthGoogleServiceAccountPartial
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(AuthGoogleServiceAccountPartial.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize AuthGoogleServiceAccountPartial (error: ${e.message})")
      }
    }

    // deserialize AuthOAuthPartial
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement(AuthOAuthPartial.serializer(), tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize AuthOAuthPartial (error: ${e.message})")
      }
    }

    throw AlgoliaClientException("Failed to deserialize json element: $tree")
  }
}
