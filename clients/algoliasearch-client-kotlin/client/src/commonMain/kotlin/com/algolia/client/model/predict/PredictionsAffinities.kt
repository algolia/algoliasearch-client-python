/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.predict

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

/**
 * PredictionsAffinities
 */
@Serializable(PredictionsAffinitiesSerializer::class)
public sealed interface PredictionsAffinities {

  public companion object {

    /**
     * The error when the model is not available.
     *
     * @param error
     */
    public fun Error(
      error: String,
    ): Error = com.algolia.client.model.predict.Error(
      error = error,
    )

    /**
     * Prediction for the **affinities** model.
     *
     * @param `value`
     * @param lastUpdatedAt
     */
    public fun PredictionsAffinitiesSuccess(
      `value`: List<Affinity>,
      lastUpdatedAt: String,
    ): PredictionsAffinitiesSuccess = com.algolia.client.model.predict.PredictionsAffinitiesSuccess(
      `value` = `value`,
      lastUpdatedAt = lastUpdatedAt,
    )
  }
}

internal class PredictionsAffinitiesSerializer : KSerializer<PredictionsAffinities> {

  override val descriptor: SerialDescriptor = buildClassSerialDescriptor("PredictionsAffinities")

  override fun serialize(encoder: Encoder, value: PredictionsAffinities) {
    when (value) {
      is Error -> Error.serializer().serialize(encoder, value)
      is PredictionsAffinitiesSuccess -> PredictionsAffinitiesSuccess.serializer().serialize(encoder, value)
    }
  }

  override fun deserialize(decoder: Decoder): PredictionsAffinities {
    val codec = decoder.asJsonDecoder()
    val tree = codec.decodeJsonElement()

    // deserialize Error
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement<Error>(tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize Error (error: ${e.message})")
      }
    }

    // deserialize PredictionsAffinitiesSuccess
    if (tree is JsonObject) {
      try {
        return codec.json.decodeFromJsonElement<PredictionsAffinitiesSuccess>(tree)
      } catch (e: Exception) {
        // deserialization failed, continue
        println("Failed to deserialize PredictionsAffinitiesSuccess (error: ${e.message})")
      }
    }

    throw AlgoliaClientException("Failed to deserialize json element: $tree")
  }
}
