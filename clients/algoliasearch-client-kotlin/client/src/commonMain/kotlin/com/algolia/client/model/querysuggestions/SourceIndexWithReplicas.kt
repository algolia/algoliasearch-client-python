/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.querysuggestions

import kotlinx.serialization.*
import kotlinx.serialization.json.*

/**
 * Source index with replicas used to generate a Query Suggestions index.
 *
 * @param replicas true if the Query Suggestions index is a replicas.
 * @param indexName Source index name.
 * @param analyticsTags List of analytics tags to filter the popular searches per tag.
 * @param facets List of facets to define as categories for the query suggestions.
 * @param minHits Minimum number of hits (e.g., matching records in the source index) to generate a suggestions.
 * @param minLetters Minimum number of required letters for a suggestion to remain.
 * @param generate List of facet attributes used to generate Query Suggestions. The resulting suggestions are every combination of the facets in the nested list (e.g., (facetA and facetB) and facetC).
 * @param `external` List of external indices to use to generate custom Query Suggestions.
 */
@Serializable
public data class SourceIndexWithReplicas(

  /** true if the Query Suggestions index is a replicas. */
  @SerialName(value = "replicas") val replicas: Boolean,

  /** Source index name. */
  @SerialName(value = "indexName") val indexName: String,

  /** List of analytics tags to filter the popular searches per tag. */
  @SerialName(value = "analyticsTags") val analyticsTags: List<String>,

  /** List of facets to define as categories for the query suggestions. */
  @SerialName(value = "facets") val facets: List<JsonObject>,

  /** Minimum number of hits (e.g., matching records in the source index) to generate a suggestions. */
  @SerialName(value = "minHits") val minHits: Int,

  /** Minimum number of required letters for a suggestion to remain. */
  @SerialName(value = "minLetters") val minLetters: Int,

  /** List of facet attributes used to generate Query Suggestions. The resulting suggestions are every combination of the facets in the nested list (e.g., (facetA and facetB) and facetC). */
  @SerialName(value = "generate") val generate: List<List<String>>,

  /** List of external indices to use to generate custom Query Suggestions. */
  @SerialName(value = "external") val `external`: List<SourceIndexExternal>,
)
