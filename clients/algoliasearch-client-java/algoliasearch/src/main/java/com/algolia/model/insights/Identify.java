// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.insights;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/**
 * The identify event is a signal for Insights to process all events coming from 'userToken' as if
 * they were from 'authenticatedUserToken'.
 */
@JsonDeserialize(as = Identify.class)
public class Identify implements EventsItems {

  @JsonProperty("eventType")
  private IdentifyEvent eventType;

  @JsonProperty("userToken")
  private String userToken;

  @JsonProperty("authenticatedUserToken")
  private String authenticatedUserToken;

  public Identify setEventType(IdentifyEvent eventType) {
    this.eventType = eventType;
    return this;
  }

  /** Get eventType */
  @javax.annotation.Nonnull
  public IdentifyEvent getEventType() {
    return eventType;
  }

  public Identify setUserToken(String userToken) {
    this.userToken = userToken;
    return this;
  }

  /**
   * Anonymous or pseudonymous user identifier. > **Note**: Never include personally identifiable
   * information in user tokens.
   */
  @javax.annotation.Nonnull
  public String getUserToken() {
    return userToken;
  }

  public Identify setAuthenticatedUserToken(String authenticatedUserToken) {
    this.authenticatedUserToken = authenticatedUserToken;
    return this;
  }

  /** User token for authenticated users. */
  @javax.annotation.Nonnull
  public String getAuthenticatedUserToken() {
    return authenticatedUserToken;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Identify identify = (Identify) o;
    return (
      Objects.equals(this.eventType, identify.eventType) &&
      Objects.equals(this.userToken, identify.userToken) &&
      Objects.equals(this.authenticatedUserToken, identify.authenticatedUserToken)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventType, userToken, authenticatedUserToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Identify {\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    userToken: ").append(toIndentedString(userToken)).append("\n");
    sb.append("    authenticatedUserToken: ").append(toIndentedString(authenticatedUserToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
