// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.insights;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** ObjectDataAfterSearch */
public class ObjectDataAfterSearch {

  @JsonProperty("queryID")
  private String queryID;

  @JsonProperty("price")
  private Price price;

  @JsonProperty("quantity")
  private Integer quantity;

  @JsonProperty("discount")
  private Discount discount;

  public ObjectDataAfterSearch setQueryID(String queryID) {
    this.queryID = queryID;
    return this;
  }

  /**
   * ID of the query that this specific record is attributable to. Used to track purchase events
   * with multiple items originating from different searches.
   */
  @javax.annotation.Nullable
  public String getQueryID() {
    return queryID;
  }

  public ObjectDataAfterSearch setPrice(Price price) {
    this.price = price;
    return this;
  }

  /** Get price */
  @javax.annotation.Nullable
  public Price getPrice() {
    return price;
  }

  public ObjectDataAfterSearch setQuantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * The quantity of the purchased or added-to-cart item. The total value of a purchase is the sum
   * of `quantity` multiplied with the `price` for each purchased item.
   */
  @javax.annotation.Nullable
  public Integer getQuantity() {
    return quantity;
  }

  public ObjectDataAfterSearch setDiscount(Discount discount) {
    this.discount = discount;
    return this;
  }

  /** Get discount */
  @javax.annotation.Nullable
  public Discount getDiscount() {
    return discount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectDataAfterSearch objectDataAfterSearch = (ObjectDataAfterSearch) o;
    return (
      Objects.equals(this.queryID, objectDataAfterSearch.queryID) &&
      Objects.equals(this.price, objectDataAfterSearch.price) &&
      Objects.equals(this.quantity, objectDataAfterSearch.quantity) &&
      Objects.equals(this.discount, objectDataAfterSearch.discount)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(queryID, price, quantity, discount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectDataAfterSearch {\n");
    sb.append("    queryID: ").append(toIndentedString(queryID)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
