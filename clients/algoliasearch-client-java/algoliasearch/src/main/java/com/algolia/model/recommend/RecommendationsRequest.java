// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.recommend;

import com.algolia.exceptions.AlgoliaRuntimeException;
import com.algolia.utils.CompoundType;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.core.*;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import java.io.IOException;
import java.util.logging.Logger;

/** RecommendationsRequest */
@JsonDeserialize(using = RecommendationsRequest.RecommendationsRequestDeserializer.class)
@JsonSerialize(using = RecommendationsRequest.RecommendationsRequestSerializer.class)
public abstract class RecommendationsRequest implements CompoundType {

  private static final Logger LOGGER = Logger.getLogger(RecommendationsRequest.class.getName());

  public static RecommendationsRequest of(RecommendationsQuery inside) {
    return new RecommendationsRequestRecommendationsQuery(inside);
  }

  public static RecommendationsRequest of(TrendingFacetsQuery inside) {
    return new RecommendationsRequestTrendingFacetsQuery(inside);
  }

  public static RecommendationsRequest of(TrendingItemsQuery inside) {
    return new RecommendationsRequestTrendingItemsQuery(inside);
  }

  public static class RecommendationsRequestSerializer extends StdSerializer<RecommendationsRequest> {

    public RecommendationsRequestSerializer(Class<RecommendationsRequest> t) {
      super(t);
    }

    public RecommendationsRequestSerializer() {
      this(null);
    }

    @Override
    public void serialize(RecommendationsRequest value, JsonGenerator jgen, SerializerProvider provider)
      throws IOException, JsonProcessingException {
      jgen.writeObject(value.getInsideValue());
    }
  }

  public static class RecommendationsRequestDeserializer extends StdDeserializer<RecommendationsRequest> {

    public RecommendationsRequestDeserializer() {
      this(RecommendationsRequest.class);
    }

    public RecommendationsRequestDeserializer(Class<?> vc) {
      super(vc);
    }

    @Override
    public RecommendationsRequest deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {
      JsonNode tree = jp.readValueAsTree();

      // deserialize RecommendationsQuery
      if (tree.isObject()) {
        try (JsonParser parser = tree.traverse(jp.getCodec())) {
          RecommendationsQuery value = parser.readValueAs(new TypeReference<RecommendationsQuery>() {});
          return RecommendationsRequest.of(value);
        } catch (Exception e) {
          // deserialization failed, continue
          LOGGER.finest("Failed to deserialize oneOf RecommendationsQuery (error: " + e.getMessage() + ") (type: RecommendationsQuery)");
        }
      }

      // deserialize TrendingFacetsQuery
      if (tree.isObject()) {
        try (JsonParser parser = tree.traverse(jp.getCodec())) {
          TrendingFacetsQuery value = parser.readValueAs(new TypeReference<TrendingFacetsQuery>() {});
          return RecommendationsRequest.of(value);
        } catch (Exception e) {
          // deserialization failed, continue
          LOGGER.finest("Failed to deserialize oneOf TrendingFacetsQuery (error: " + e.getMessage() + ") (type: TrendingFacetsQuery)");
        }
      }

      // deserialize TrendingItemsQuery
      if (tree.isObject()) {
        try (JsonParser parser = tree.traverse(jp.getCodec())) {
          TrendingItemsQuery value = parser.readValueAs(new TypeReference<TrendingItemsQuery>() {});
          return RecommendationsRequest.of(value);
        } catch (Exception e) {
          // deserialization failed, continue
          LOGGER.finest("Failed to deserialize oneOf TrendingItemsQuery (error: " + e.getMessage() + ") (type: TrendingItemsQuery)");
        }
      }
      throw new AlgoliaRuntimeException(String.format("Failed to deserialize json element: %s", tree));
    }

    /** Handle deserialization of the 'null' value. */
    @Override
    public RecommendationsRequest getNullValue(DeserializationContext ctxt) throws JsonMappingException {
      throw new JsonMappingException(ctxt.getParser(), "RecommendationsRequest cannot be null");
    }
  }
}

class RecommendationsRequestRecommendationsQuery extends RecommendationsRequest {

  private final RecommendationsQuery insideValue;

  RecommendationsRequestRecommendationsQuery(RecommendationsQuery insideValue) {
    this.insideValue = insideValue;
  }

  @Override
  public RecommendationsQuery getInsideValue() {
    return insideValue;
  }
}

class RecommendationsRequestTrendingFacetsQuery extends RecommendationsRequest {

  private final TrendingFacetsQuery insideValue;

  RecommendationsRequestTrendingFacetsQuery(TrendingFacetsQuery insideValue) {
    this.insideValue = insideValue;
  }

  @Override
  public TrendingFacetsQuery getInsideValue() {
    return insideValue;
  }
}

class RecommendationsRequestTrendingItemsQuery extends RecommendationsRequest {

  private final TrendingItemsQuery insideValue;

  RecommendationsRequestTrendingItemsQuery(TrendingItemsQuery insideValue) {
    this.insideValue = insideValue;
  }

  @Override
  public TrendingItemsQuery getInsideValue() {
    return insideValue;
  }
}
