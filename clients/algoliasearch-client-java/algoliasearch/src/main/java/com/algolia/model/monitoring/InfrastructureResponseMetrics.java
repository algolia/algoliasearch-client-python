// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.monitoring;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/** InfrastructureResponseMetrics */
public class InfrastructureResponseMetrics {

  @JsonProperty("cpu_usage")
  private Map<String, List<ProbesMetric>> cpuUsage;

  @JsonProperty("ram_indexing_usage")
  private Map<String, List<ProbesMetric>> ramIndexingUsage;

  @JsonProperty("ram_search_usage")
  private Map<String, List<ProbesMetric>> ramSearchUsage;

  @JsonProperty("ssd_usage")
  private Map<String, List<ProbesMetric>> ssdUsage;

  @JsonProperty("avg_build_time")
  private Map<String, List<ProbesMetric>> avgBuildTime;

  public InfrastructureResponseMetrics setCpuUsage(Map<String, List<ProbesMetric>> cpuUsage) {
    this.cpuUsage = cpuUsage;
    return this;
  }

  public InfrastructureResponseMetrics putCpuUsage(String key, List<ProbesMetric> cpuUsageItem) {
    if (this.cpuUsage == null) {
      this.cpuUsage = new HashMap<>();
    }
    this.cpuUsage.put(key, cpuUsageItem);
    return this;
  }

  /** CPU idleness in %. */
  @javax.annotation.Nullable
  public Map<String, List<ProbesMetric>> getCpuUsage() {
    return cpuUsage;
  }

  public InfrastructureResponseMetrics setRamIndexingUsage(Map<String, List<ProbesMetric>> ramIndexingUsage) {
    this.ramIndexingUsage = ramIndexingUsage;
    return this;
  }

  public InfrastructureResponseMetrics putRamIndexingUsage(String key, List<ProbesMetric> ramIndexingUsageItem) {
    if (this.ramIndexingUsage == null) {
      this.ramIndexingUsage = new HashMap<>();
    }
    this.ramIndexingUsage.put(key, ramIndexingUsageItem);
    return this;
  }

  /** RAM used for indexing in MB. */
  @javax.annotation.Nullable
  public Map<String, List<ProbesMetric>> getRamIndexingUsage() {
    return ramIndexingUsage;
  }

  public InfrastructureResponseMetrics setRamSearchUsage(Map<String, List<ProbesMetric>> ramSearchUsage) {
    this.ramSearchUsage = ramSearchUsage;
    return this;
  }

  public InfrastructureResponseMetrics putRamSearchUsage(String key, List<ProbesMetric> ramSearchUsageItem) {
    if (this.ramSearchUsage == null) {
      this.ramSearchUsage = new HashMap<>();
    }
    this.ramSearchUsage.put(key, ramSearchUsageItem);
    return this;
  }

  /** RAM used for search in MB. */
  @javax.annotation.Nullable
  public Map<String, List<ProbesMetric>> getRamSearchUsage() {
    return ramSearchUsage;
  }

  public InfrastructureResponseMetrics setSsdUsage(Map<String, List<ProbesMetric>> ssdUsage) {
    this.ssdUsage = ssdUsage;
    return this;
  }

  public InfrastructureResponseMetrics putSsdUsage(String key, List<ProbesMetric> ssdUsageItem) {
    if (this.ssdUsage == null) {
      this.ssdUsage = new HashMap<>();
    }
    this.ssdUsage.put(key, ssdUsageItem);
    return this;
  }

  /**
   * Solid-state disk (SSD) usage expressed as % of RAM. 0% means no SSD usage. A value of 50%
   * indicates 32&nbsp;GB SSD usage for a machine with 64&nbsp;RAM.
   */
  @javax.annotation.Nullable
  public Map<String, List<ProbesMetric>> getSsdUsage() {
    return ssdUsage;
  }

  public InfrastructureResponseMetrics setAvgBuildTime(Map<String, List<ProbesMetric>> avgBuildTime) {
    this.avgBuildTime = avgBuildTime;
    return this;
  }

  public InfrastructureResponseMetrics putAvgBuildTime(String key, List<ProbesMetric> avgBuildTimeItem) {
    if (this.avgBuildTime == null) {
      this.avgBuildTime = new HashMap<>();
    }
    this.avgBuildTime.put(key, avgBuildTimeItem);
    return this;
  }

  /** Average build time of the indices in seconds. */
  @javax.annotation.Nullable
  public Map<String, List<ProbesMetric>> getAvgBuildTime() {
    return avgBuildTime;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfrastructureResponseMetrics infrastructureResponseMetrics = (InfrastructureResponseMetrics) o;
    return (
      Objects.equals(this.cpuUsage, infrastructureResponseMetrics.cpuUsage) &&
      Objects.equals(this.ramIndexingUsage, infrastructureResponseMetrics.ramIndexingUsage) &&
      Objects.equals(this.ramSearchUsage, infrastructureResponseMetrics.ramSearchUsage) &&
      Objects.equals(this.ssdUsage, infrastructureResponseMetrics.ssdUsage) &&
      Objects.equals(this.avgBuildTime, infrastructureResponseMetrics.avgBuildTime)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuUsage, ramIndexingUsage, ramSearchUsage, ssdUsage, avgBuildTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfrastructureResponseMetrics {\n");
    sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
    sb.append("    ramIndexingUsage: ").append(toIndentedString(ramIndexingUsage)).append("\n");
    sb.append("    ramSearchUsage: ").append(toIndentedString(ramSearchUsage)).append("\n");
    sb.append("    ssdUsage: ").append(toIndentedString(ssdUsage)).append("\n");
    sb.append("    avgBuildTime: ").append(toIndentedString(avgBuildTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
