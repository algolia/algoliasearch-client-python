// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.recommend;

import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.annotation.*;
import java.util.Objects;

/** TrendingFacetsQuery */
@JsonDeserialize(as = TrendingFacetsQuery.class)
public class TrendingFacetsQuery implements RecommendationsRequest {

  @JsonProperty("facetName")
  private String facetName;

  @JsonProperty("model")
  private TrendingFacetsModel model;

  @JsonProperty("indexName")
  private String indexName;

  @JsonProperty("threshold")
  private Integer threshold;

  @JsonProperty("maxRecommendations")
  private Integer maxRecommendations;

  public TrendingFacetsQuery setFacetName(String facetName) {
    this.facetName = facetName;
    return this;
  }

  /** Facet name for trending models. */
  @javax.annotation.Nonnull
  public String getFacetName() {
    return facetName;
  }

  public TrendingFacetsQuery setModel(TrendingFacetsModel model) {
    this.model = model;
    return this;
  }

  /** Get model */
  @javax.annotation.Nullable
  public TrendingFacetsModel getModel() {
    return model;
  }

  public TrendingFacetsQuery setIndexName(String indexName) {
    this.indexName = indexName;
    return this;
  }

  /** Algolia index name. */
  @javax.annotation.Nonnull
  public String getIndexName() {
    return indexName;
  }

  public TrendingFacetsQuery setThreshold(Integer threshold) {
    this.threshold = threshold;
    return this;
  }

  /**
   * Recommendations with a confidence score lower than `threshold` won't appear in results. >
   * **Note**: Each recommendation has a confidence score of 0 to 100. The closer the score is to
   * 100, the more relevant the recommendations are. minimum: 0 maximum: 100
   */
  @javax.annotation.Nullable
  public Integer getThreshold() {
    return threshold;
  }

  public TrendingFacetsQuery setMaxRecommendations(Integer maxRecommendations) {
    this.maxRecommendations = maxRecommendations;
    return this;
  }

  /** Maximum number of recommendations to retrieve. If 0, all recommendations will be returned. */
  @javax.annotation.Nullable
  public Integer getMaxRecommendations() {
    return maxRecommendations;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrendingFacetsQuery trendingFacetsQuery = (TrendingFacetsQuery) o;
    return (
      Objects.equals(this.facetName, trendingFacetsQuery.facetName) &&
      Objects.equals(this.model, trendingFacetsQuery.model) &&
      Objects.equals(this.indexName, trendingFacetsQuery.indexName) &&
      Objects.equals(this.threshold, trendingFacetsQuery.threshold) &&
      Objects.equals(this.maxRecommendations, trendingFacetsQuery.maxRecommendations)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(facetName, model, indexName, threshold, maxRecommendations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrendingFacetsQuery {\n");
    sb.append("    facetName: ").append(toIndentedString(facetName)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("    maxRecommendations: ").append(toIndentedString(maxRecommendations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
