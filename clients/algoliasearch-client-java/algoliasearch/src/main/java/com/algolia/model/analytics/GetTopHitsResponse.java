// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost
// - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

package com.algolia.model.analytics;

import com.algolia.exceptions.AlgoliaRuntimeException;
import com.algolia.utils.CompoundType;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.core.*;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import java.io.IOException;
import java.util.logging.Logger;

/** GetTopHitsResponse */
@JsonDeserialize(using = GetTopHitsResponse.GetTopHitsResponseDeserializer.class)
@JsonSerialize(using = GetTopHitsResponse.GetTopHitsResponseSerializer.class)
public abstract class GetTopHitsResponse implements CompoundType {

  private static final Logger LOGGER = Logger.getLogger(GetTopHitsResponse.class.getName());

  public static GetTopHitsResponse of(TopHitsResponse inside) {
    return new GetTopHitsResponseTopHitsResponse(inside);
  }

  public static GetTopHitsResponse of(TopHitsResponseWithAnalytics inside) {
    return new GetTopHitsResponseTopHitsResponseWithAnalytics(inside);
  }

  public static class GetTopHitsResponseSerializer extends StdSerializer<GetTopHitsResponse> {

    public GetTopHitsResponseSerializer(Class<GetTopHitsResponse> t) {
      super(t);
    }

    public GetTopHitsResponseSerializer() {
      this(null);
    }

    @Override
    public void serialize(GetTopHitsResponse value, JsonGenerator jgen, SerializerProvider provider)
      throws IOException, JsonProcessingException {
      jgen.writeObject(value.getInsideValue());
    }
  }

  public static class GetTopHitsResponseDeserializer extends StdDeserializer<GetTopHitsResponse> {

    public GetTopHitsResponseDeserializer() {
      this(GetTopHitsResponse.class);
    }

    public GetTopHitsResponseDeserializer(Class<?> vc) {
      super(vc);
    }

    @Override
    public GetTopHitsResponse deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {
      JsonNode tree = jp.readValueAsTree();

      // deserialize TopHitsResponse
      if (tree.isObject()) {
        try (JsonParser parser = tree.traverse(jp.getCodec())) {
          TopHitsResponse value = parser.readValueAs(new TypeReference<TopHitsResponse>() {});
          return GetTopHitsResponse.of(value);
        } catch (Exception e) {
          // deserialization failed, continue
          LOGGER.finest("Failed to deserialize oneOf TopHitsResponse (error: " + e.getMessage() + ") (type: TopHitsResponse)");
        }
      }

      // deserialize TopHitsResponseWithAnalytics
      if (tree.isObject()) {
        try (JsonParser parser = tree.traverse(jp.getCodec())) {
          TopHitsResponseWithAnalytics value = parser.readValueAs(new TypeReference<TopHitsResponseWithAnalytics>() {});
          return GetTopHitsResponse.of(value);
        } catch (Exception e) {
          // deserialization failed, continue
          LOGGER.finest(
            "Failed to deserialize oneOf TopHitsResponseWithAnalytics (error: " + e.getMessage() + ") (type: TopHitsResponseWithAnalytics)"
          );
        }
      }
      throw new AlgoliaRuntimeException(String.format("Failed to deserialize json element: %s", tree));
    }

    /** Handle deserialization of the 'null' value. */
    @Override
    public GetTopHitsResponse getNullValue(DeserializationContext ctxt) throws JsonMappingException {
      throw new JsonMappingException(ctxt.getParser(), "GetTopHitsResponse cannot be null");
    }
  }
}

class GetTopHitsResponseTopHitsResponse extends GetTopHitsResponse {

  private final TopHitsResponse insideValue;

  GetTopHitsResponseTopHitsResponse(TopHitsResponse insideValue) {
    this.insideValue = insideValue;
  }

  @Override
  public TopHitsResponse getInsideValue() {
    return insideValue;
  }
}

class GetTopHitsResponseTopHitsResponseWithAnalytics extends GetTopHitsResponse {

  private final TopHitsResponseWithAnalytics insideValue;

  GetTopHitsResponseTopHitsResponseWithAnalytics(TopHitsResponseWithAnalytics insideValue) {
    this.insideValue = insideValue;
  }

  @Override
  public TopHitsResponseWithAnalytics getInsideValue() {
    return insideValue;
  }
}
