rule:
  type: object
  description: Rule object.
  additionalProperties: false
  properties:
    objectID:
      type: string
      description: Unique identifier for a rule object.
      example: 'hide-12345'
    conditions:
      type: array
      description: >
        [Conditions](https://www.algolia.com/doc/guides/managing-results/rules/rules-overview/#conditions) required to activate a rule. You can use up to 25 conditions per rule.
      items:
        $ref: '#/condition'
    consequence:
      $ref: '#/consequence'
    description:
      type: string
      description: Description of the rule's purpose. This can be helpful for display in the Algolia dashboard.
      example: 'Display a promotional banner'
    enabled:
      type: boolean
      default: true
      description: Indicates whether to enable the rule. If it isn't enabled, it isn't applied at query time.
    validity:
      type: array
      description: If you specify a validity period, the rule _only_ applies only during that period. If specified, the array must not be empty.
      items:
        $ref: '#/timeRange'
  required:
    - objectID

condition:
  type: object
  additionalProperties: false
  properties:
    pattern:
      type: string
      description: Query pattern syntax.
      example: '{facet:brand}'
    anchoring:
      $ref: '#/anchoring'
    alternatives:
      type: boolean
      description: Whether the pattern matches on plurals, synonyms, and typos.
      default: false
    context:
      type: string
      description: 'Rule context format: [A-Za-z0-9_-]+).'
      example: 'trackedFilters'

anchoring:
  type: string
  description: Whether the pattern parameter matches the beginning (`startsWith`) or end (`endsWith`) of the query string, is an exact match (`is`), or a partial match (`contains`).
  enum: [is, startsWith, endsWith, contains]

consequence:
  type: object
  description: >
    [Consequences](https://www.algolia.com/doc/guides/managing-results/rules/rules-overview/#consequences) of a rule.
  additionalProperties: false
  properties:
    params:
      $ref: '#/consequenceParams'
    promote:
      type: array
      description: Records to promote.
      items:
        $ref: '#/promote'
    filterPromotes:
      type: boolean
      default: false
      description: Only use in combination with the `promote` consequence. When `true`, promoted results will be restricted to match the filters of the current search. When `false`, the promoted results will show up regardless of the filters.
    hide:
      type: array
      description: Records to hide. By default, you can hide up to 50 records per rule.
      items:
        title: consequenceHide
        type: object
        description: Unique identifier of the record to hide.
        additionalProperties: false
        properties:
          objectID:
            $ref: '../../../../common/parameters.yml#/objectID'
        required:
          - objectID
    userData:
      description: Custom JSON object that will be appended to the userData array in the response. This object isn't interpreted by the API. It's limited to 1kB of minified JSON.
      example: {'settingID': 'f2a7b51e3503acc6a39b3784ffb84300','pluginVersion': '1.6.0'}

consequenceParams:
  allOf:
    - $ref: '../../../../common/schemas/SearchParams.yml#/baseSearchParamsWithoutQuery'
    - $ref: '../../../../common/schemas/IndexSettings.yml#/indexSettingsAsSearchParams'
    - $ref: '#/params'

promote:
  oneOf:
    - $ref: '#/promoteObjectIDs'
    - $ref: '#/promoteObjectID'

promoteObjectID:
  description: Record to promote.
  type: object
  additionalProperties: false
  properties:
    objectID:
      type: string
      example: '2b642cf64c587f50388eb1b8d047bf56'
      description: Unique identifier of the record to promote.
    position:
      $ref: '#/promotePosition'
  required:
    - position
    - objectID

promoteObjectIDs:
  description: Records to promote.
  type: object
  additionalProperties: false
  properties:
    objectIDs:
      type: array
      description: Unique identifiers of the records to promote.
      example: ['3f31c087763a2ceec359b318fc3edef3','63c3c871e31a152d67df7720192fd752']
      items:
        type: string
    position:
      $ref: '#/promotePosition'
  required:
    - position
    - objectIDs

promotePosition:
  type: integer
  description: The position to promote the records to. If you pass objectIDs, the records are placed at this position as a group. For example, if you pronmote four objectIDs to position 0, the records take the first four positions.
  example: 0

params:
  type: object
  description: Additional search parameters.
  additionalProperties: false
  properties:
    query:
      $ref: '#/consequenceQuery'
    automaticFacetFilters:
      $ref: '#/automaticFacetFilters'
    automaticOptionalFacetFilters:
      $ref: '#/automaticOptionalFacetFilters'
    renderingContent:
      $ref: '../../../../common/schemas/IndexSettings.yml#/renderingContent'

consequenceQuery:
  description: When providing a string, it replaces the entire query string. When providing an object, it describes incremental edits to be made to the query string (but you can't do both).
  oneOf:
    - $ref: '#/consequenceQueryObject'
    - type: string

consequenceQueryObject:
  type: object
  additionalProperties: false
  properties:
    remove:
      description: Words to remove.
      type: array
      items:
        type: string
    edits:
      description: Edits to apply.
      type: array
      items:
        $ref: '#/edit'

edit:
  type: object
  additionalProperties: false
  properties:
    type:
      $ref: '#/editType'
    delete:
      description: Text or patterns to remove from the query string.
      type: string
    insert:
      description: Text that should be inserted in place of the removed text inside the query string.
      type: string

editType:
  description: Type of edit.
  type: string
  enum: [remove, replace]

automaticFacetFilters:
  description: Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.
  oneOf:
    - type: array
      items:
        $ref: '#/automaticFacetFilter'
    - type: array
      items:
        type: string

automaticOptionalFacetFilters:
  description: Same syntax as `automaticFacetFilters`, but the engine treats the filters as optional.
  $ref: '#/automaticFacetFilters'

automaticFacetFilter:
  type: object
  description: Automatic facet Filter.
  additionalProperties: false
  properties:
    facet:
      type: string
      description: Attribute to filter on. This must match a facet placeholder in the Rule's pattern.
    score:
      type: integer
      default: 1
      description: Score for the filter. Typically used for optional or disjunctive filters.
    disjunctive:
      type: boolean
      default: false
      description: Whether the filter is disjunctive (true) or conjunctive (false).
  required:
    - facet

timeRange:
  type: object
  additionalProperties: false
  properties:
    from:
      type: integer
      description: Lower bound of the time range (Unix timestamp).
    until:
      type: integer
      description: Upper bound of the time range (Unix timestamp).
  required:
    - from
    - until

updatedRuleResponse:
  type: object
  additionalProperties: false
  properties:
    objectID:
      $ref: '../../../../common/parameters.yml#/objectID'
    updatedAt:
      $ref: '../../../../common/responses/common.yml#/updatedAt'
    taskID:
      $ref: '../../../../common/responses/common.yml#/taskID'
  required:
    - objectID
    - updatedAt
    - taskID
