post:
  tags:
    - Clusters
  operationId: searchUserIds
  x-use-read-transporter: true
  x-cacheable: true
  summary: Search for a user ID.
  description: >
    Since it can take up to a few seconds to get the data from the different clusters,
    the response isn't real-time.
    
    To ensure rapid updates, the user IDs index isn't built at the same time as the mapping. Instead, it's built every 12 hours, at the same time as the update of user ID usage. For example, if you add or move a user ID, the search will show an old value until the next time the mapping is rebuilt (every 12 hours). 
  requestBody:
    required: true
    content:
      application/json:
        schema:
          title: searchUserIdsParams
          type: object
          description: OK
          additionalProperties: false
          properties:
            query:
              type: string
              description: Query to search. The search is a prefix search with [typo tolerance](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/typo-tolerance/) enabled. An empty query will retrieve all users.
            clusterName:
              $ref: '../../common/schemas/Cluster.yml#/clusterName'
            page:
              $ref: '../../../common/schemas/SearchParams.yml#/page'
            hitsPerPage:
              $ref: '../../../common/schemas/IndexSettings.yml#/hitsPerPage'
          required:
            - query
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            title: searchUserIdsResponse
            type: object
            description: userIDs data.
            properties:
              hits:
                type: array
                description: User objects that match the query.
                items:
                  title: userHit
                  type: object
                  properties:
                    userID:
                      $ref: '../../common/parameters.yml#/userID'
                    clusterName:
                      $ref: '../../common/schemas/Cluster.yml#/clusterName'
                    nbRecords:
                      $ref: '../../common/schemas/Cluster.yml#/nbRecords'
                    dataSize:
                      $ref: '../../common/schemas/Cluster.yml#/dataSize'
                    objectID:
                      type: string
                      description: userID of the requested user. Same as userID.
                    _highlightResult:
                      title: userHighlightResult
                      type: object
                      properties:
                        userID:
                          $ref: '../../common/schemas/Hit.yml#/highlightResultMap'
                        clusterName:
                          $ref: '../../common/schemas/Hit.yml#/highlightResultMap'
                      required:
                        - userID
                        - clusterName
                  required:
                    - userID
                    - clusterName
                    - nbRecords
                    - dataSize
                    - objectID
                    - _highlightResult
              nbHits:
                $ref: '../../common/schemas/SearchResponse.yml#/nbHits'
              page:
                $ref: '../../../common/schemas/SearchParams.yml#/page'
              hitsPerPage:
                $ref: '../../../common/parameters.yml#/hitsPerPage'
              updatedAt:
                $ref: '../../../common/responses/common.yml#/updatedAt'
            required:
              - hits
              - nbHits
              - page
              - hitsPerPage
              - updatedAt
    '400':
      $ref: '../../../common/responses/BadRequest.yml'
    '402':
      $ref: '../../../common/responses/FeatureNotEnabled.yml'
    '403':
      $ref: '../../../common/responses/MethodNotAllowed.yml'
    '404':
      $ref: '../../../common/responses/IndexNotFound.yml'
