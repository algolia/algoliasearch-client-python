openapi: 3.0.2
info:
  title: Query Suggestions API
  description: >
    The Query Suggestions API lets you manage Algolia's Query Suggestions
    configurations.

    Query Suggestions add new indices with popular search queries, external
    suggestions, or facet values to your Algolia application.

    In your user interface, you can query the Query Suggestions indices like
    regular indices and add [suggested
    searches](https://www.algolia.com/doc/guides/building-search-ui/ui-and-ux-patterns/query-suggestions/js/)
    to guide users and speed up their search.
  version: 1.0.0
components:
  securitySchemes:
    appId:
      type: apiKey
      in: header
      name: X-Algolia-Application-Id
    apiKey:
      type: apiKey
      in: header
      name: X-Algolia-API-Key
  parameters:
    PathInPath:
      name: path
      in: path
      description: Path of the endpoint, anything after "/1" must be specified.
      required: true
      schema:
        type: string
        example: /keys
    Parameters:
      name: parameters
      in: query
      description: Query parameters to apply to the current query.
      schema:
        type: object
        additionalProperties: true
    IndexName:
      name: indexName
      in: path
      required: true
      description: Query Suggestions index name.
      schema:
        $ref: '#/components/schemas/QuerySuggestionsIndexName'
  schemas:
    ErrorBase:
      description: Error.
      type: object
      additionalProperties: true
      properties:
        message:
          type: string
          example: Invalid Application-Id or API-Key
    QuerySuggestionsIndexName:
      title: indexName
      type: string
      description: Query Suggestions index name.
      example: products_query_suggestions
    Facet:
      title: facet
      description: Facet to use as category.
      type: object
      additionalProperties: false
      properties:
        attribute:
          type: string
          description: Facet name.
        amount:
          type: integer
          description: Number of suggestions.
    SourceIndex:
      title: sourceIndex
      type: object
      description: Configuration of an Algolia index for Query Suggestions.
      additionalProperties: false
      required:
        - indexName
      properties:
        indexName:
          type: string
          description: Name of the Algolia index to use as source for query suggestions.
          example: products
        replicas:
          type: boolean
          default: false
          description: >
            If true, Query Suggestions uses all replicas of the primary index to
            find popular searches.

            If false, only the primary index is used. 
          example: false
        analyticsTags:
          type: array
          description: >
            [Analytics
            tags](https://www.algolia.com/doc/api-reference/api-parameters/analyticsTags/)
            for filtering the popular searches.
          nullable: true
          items:
            type: string
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
          nullable: true
          description: >
            Facets to use as top categories with your suggestions.


            If provided, Query Suggestions adds the top facet values to each
            suggestion.
          example:
            - attribute: category
              amount: 3
            - attribute: brand
              amount: 2
        minHits:
          type: integer
          minimum: 0
          default: 5
          description: >
            Minimum number of hits required to be included as a suggestion.


            A search query must at least generate `minHits` hits to be included
            in the Query Suggestions index.
        minLetters:
          type: integer
          minimum: 0
          default: 4
          description: >
            Minimum letters required to be included as a suggestion.


            A search query must be at least `minLetters` long to be included in
            the Query Suggestions index.
        generate:
          type: array
          items:
            type: array
            items:
              type: string
            nullable: true
            description: >
              Facets used for generating query suggestions from facet values.


              For example, if you set `generate: ["color", "brand"]`,
              combinations from the facet values are added as query suggestions,

              such as "blue adidas", "red adidas", "blue nike", "red nike", etc.


              You can include nested lists.
            example:
              - color
              - brand
        external:
          type: array
          items:
            type: string
          nullable: true
          description: >
            Algolia indices with popular searches to use as query suggestions.


            Records of these indices must have these attributes:

              - `query`: search query which will be added as a suggestion
              - `count`: measure of popularity of that search query

            For example, you can export popular searches from an external
            analytics tool, such as Google Analytics or Adobe Analytics,

            and feed this data into an external Algolia index.

            You can use this external index to generate query suggestions until
            your Algolia analytics has collected enough data.
    SourceIndices:
      title: sourceIndices
      type: array
      description: >-
        Algolia indices from which to get the popular searches for query
        suggestions.
      minItems: 1
      items:
        $ref: '#/components/schemas/SourceIndex'
    Languages:
      title: languages
      description: |
        Set the language for deduplicating singular and plural suggestions.
        If specified, only the more popular form is included.
      oneOf:
        - type: array
          items:
            type: string
        - type: boolean
          default: false
    QuerySuggestionsConfiguration:
      type: object
      description: Query Suggestions configuration.
      additionalProperties: false
      required:
        - sourceIndices
      properties:
        sourceIndices:
          $ref: '#/components/schemas/SourceIndices'
        languages:
          $ref: '#/components/schemas/Languages'
        exclude:
          type: array
          description: Patterns to exclude from query suggestions.
          nullable: true
          items:
            type: string
        enablePersonalization:
          type: boolean
          default: false
          description: Turn on personalized query suggestions.
        allowSpecialCharacters:
          type: boolean
          default: false
          description: Allow suggestions with special characters.
    QuerySuggestionsConfigurationWithIndex:
      type: object
      description: Query Suggestions configuration.
      required:
        - indexName
        - sourceIndices
      allOf:
        - type: object
          additionalProperties: false
          required:
            - indexName
          properties:
            indexName:
              $ref: '#/components/schemas/QuerySuggestionsIndexName'
        - $ref: '#/components/schemas/QuerySuggestionsConfiguration'
    QuerySuggestionsConfigurationResponse:
      type: object
      allOf:
        - type: object
          additionalProperties: false
          properties:
            appId:
              type: string
              description: Your Algolia application ID.
            sourceIndicesAPIKey:
              type: string
              description: API key used to read from your source index.
            suggestionsIndicesAPIKey:
              type: string
              description: >-
                API key used to write and configure your Query Suggestions
                index.
            externalIndicesAPIKey:
              type: string
              default: ''
              description: API key used to read from external Algolia indices.
        - $ref: '#/components/schemas/QuerySuggestionsConfigurationWithIndex'
    BaseResponse:
      type: object
      additionalProperties: false
      properties:
        status:
          type: integer
          description: HTTP status code.
        message:
          type: string
          description: Details about the response, such as error messages.
    LogLevel:
      title: level
      type: string
      description: >
        The type of log entry. 


        - `SKIP`. A query is skipped because it doesn't match the conditions for
        successful inclusion. For example, when a query doesn't generate enough
        search results.

        - `INFO`. An informative log entry.

        - `ERROR`. The Query Suggestions process encountered an error.
      enum:
        - SKIP
        - INFO
        - ERROR
  responses:
    BadRequest:
      description: Bad request or request arguments.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorBase'
    FeatureNotEnabled:
      description: This feature is not enabled on your Algolia account.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorBase'
    MethodNotAllowed:
      description: Method not allowed with this API key.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorBase'
    IndexNotFound:
      description: Index not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorBase'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          examples:
            Unauthorized:
              summary: Wrong region.
              description: >
                Make sure to make your request to the server corresponding to
                your region.  


                You can check the region for your application in the [Algolia
                dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).
              value:
                status: 401
                message: The log processing region does not match
            InvalidCredentials:
              summary: Invalid credentials.
              description: Your application ID or API key is wrong.
              value:
                status: 401
                message: Invalid credentials
            WrongAPIKey:
              summary: Admin API key required.
              description: Your API key is not the Admin API key for your application.
              value:
                status: 401
                message: The admin API key is required
    BadRequest-2:
      description: Bad Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          examples:
            IndexNameRequired:
              summary: Index name required.
              value:
                status: 400
                message: IndexName cannot be empty
            SourceIndicesRequired:
              summary: Source indices required.
              value:
                status: 400
                message: >-
                  Invalid body "sourceIndices needs to contain at least one
                  index".
            SourceIndexNameRequired:
              summary: Source index name required.
              value:
                status: 400
                message: Invalid body "every source index must have an `indexName`".
            MinHitsPositive:
              summary: MinHits must be positive.
              value:
                status: 400
                message: Invalid body "every source index `minHits` must be positive".
            MinLettersPositive:
              summary: MinLetters must be positive.
              value:
                status: 400
                message: >-
                  Invalid body "every source index `minLetters` must be
                  positive".
    UnprocessableEntity:
      description: Unprocessable Entity.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          examples:
            UnprocessableEntity:
              summary: Configuration already exists.
              value:
                status: 422
                message: 'Configuration already exists for index: test-qs'
    InternalError:
      description: Internal error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorBase'
    NotFound:
      description: Not Found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          examples:
            NotFound:
              summary: Index not found.
              value:
                status: 404
                message: Not Found
    InternalError-2:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          examples:
            Error:
              description: >-
                This error can happen if you use a non-existing `indexName` as a
                path parameter when trying to update or delete a Query
                Suggestions configuration.
              value:
                status: 500
                message: Internal Server Error
servers:
  - url: https://query-suggestions.{region}.algolia.com
    description: >
      You can check the region for your application in the [Algolia
      dashboard](https://dashboard.algolia.com/account/infrastructure/analytics).

      If you connect to the wrong region, the API returns an error with the
      status `401` and the message: "The log processing region does not match".
    variables:
      region:
        enum:
          - us
          - eu
        default: us
security:
  - appId: []
    apiKey: []
tags:
  - name: configurations
    x-displayName: Configurations
    description: Manage Query Suggestions configurations.
  - name: logs
    x-displayName: Logs
    description: Get logs for a Query Suggestions index.
x-tagGroups:
  - name: Configurations
    tags:
      - configurations
  - name: Logs
    tags:
      - logs
paths:
  /1{path}:
    get:
      operationId: get
      summary: Send requests to the Algolia REST API.
      description: This method allow you to send requests to the Algolia REST API.
      parameters:
        - $ref: '#/components/parameters/PathInPath'
        - $ref: '#/components/parameters/Parameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '402':
          $ref: '#/components/responses/FeatureNotEnabled'
        '403':
          $ref: '#/components/responses/MethodNotAllowed'
        '404':
          $ref: '#/components/responses/IndexNotFound'
      tags:
        - query-suggestions
    post:
      operationId: post
      requestBody:
        description: Parameters to send with the custom request.
        content:
          application/json:
            schema:
              type: object
      summary: Send requests to the Algolia REST API.
      description: This method allow you to send requests to the Algolia REST API.
      parameters:
        - $ref: '#/components/parameters/PathInPath'
        - $ref: '#/components/parameters/Parameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '402':
          $ref: '#/components/responses/FeatureNotEnabled'
        '403':
          $ref: '#/components/responses/MethodNotAllowed'
        '404':
          $ref: '#/components/responses/IndexNotFound'
      tags:
        - query-suggestions
    put:
      operationId: put
      requestBody:
        description: Parameters to send with the custom request.
        content:
          application/json:
            schema:
              type: object
      summary: Send requests to the Algolia REST API.
      description: This method allow you to send requests to the Algolia REST API.
      parameters:
        - $ref: '#/components/parameters/PathInPath'
        - $ref: '#/components/parameters/Parameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '402':
          $ref: '#/components/responses/FeatureNotEnabled'
        '403':
          $ref: '#/components/responses/MethodNotAllowed'
        '404':
          $ref: '#/components/responses/IndexNotFound'
      tags:
        - query-suggestions
    delete:
      operationId: del
      summary: Send requests to the Algolia REST API.
      description: This method allow you to send requests to the Algolia REST API.
      parameters:
        - $ref: '#/components/parameters/PathInPath'
        - $ref: '#/components/parameters/Parameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '402':
          $ref: '#/components/responses/FeatureNotEnabled'
        '403':
          $ref: '#/components/responses/MethodNotAllowed'
        '404':
          $ref: '#/components/responses/IndexNotFound'
      tags:
        - query-suggestions
  /1/configs:
    get:
      tags:
        - query-suggestions
      operationId: getAllConfigs
      summary: List configurations.
      description: List all Query Suggestions configurations of your Algolia application.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuerySuggestionsConfigurationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - query-suggestions
      operationId: createConfig
      summary: Create a configuration.
      description: |
        Create a new Query Suggestions configuration.

        You can have up to 100 configurations per Algolia application.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySuggestionsConfigurationWithIndex'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                Created:
                  summary: Configuration created.
                  value:
                    status: 200
                    message: >-
                      Configuration was created, and a new indexing job has been
                      scheduled.
        '400':
          $ref: '#/components/responses/BadRequest-2'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalError'
  /1/configs/{indexName}:
    get:
      tags:
        - query-suggestions
      operationId: getConfig
      summary: Get a configuration.
      description: Get a single Query Suggestions configuration.
      parameters:
        - $ref: '#/components/parameters/IndexName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySuggestionsConfigurationResponse'
        '400':
          $ref: '#/components/responses/BadRequest-2'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - query-suggestions
      operationId: updateConfig
      summary: Update a configuration.
      description: Update a QuerySuggestions configuration.
      parameters:
        - $ref: '#/components/parameters/IndexName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySuggestionsConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                Created:
                  summary: Configuration created.
                  value:
                    status: 200
                    message: >-
                      Configuration was updated, and a new indexing job has been
                      scheduled.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError-2'
    delete:
      tags:
        - query-suggestions
      operationId: deleteConfig
      summary: Delete a configuration.
      description: >
        Delete a Query Suggestions configuration.


        Deleting only removes the configuration and stops updates to the Query
        Suggestions index.

        The Query Suggestions index itself is not deleted.
      parameters:
        - $ref: '#/components/parameters/IndexName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                Created:
                  summary: Configuration created.
                  value:
                    status: 200
                    message: Configuration was deleted with success.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError-2'
  /1/configs/{indexName}/status:
    get:
      tags:
        - query-suggestions
      operationId: getConfigStatus
      summary: Get configuration status.
      description: Report the status of a Query Suggestions index.
      parameters:
        - $ref: '#/components/parameters/IndexName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  indexName:
                    $ref: '#/components/schemas/QuerySuggestionsIndexName'
                  isRunning:
                    type: boolean
                    description: >-
                      Indicates whether the creation or update of the Query
                      Suggestions is in progress.
                    example: false
                  lastBuiltAt:
                    type: string
                    description: >-
                      Timestamp in
                      [ISO-8601](https://wikipedia.org/wiki/ISO_8601) format
                      when the Query Suggestions index was last built.
                    example: '2023-07-05T08:03:53Z'
                  lastSuccessfulBuiltAt:
                    type: string
                    description: >-
                      Timestamp in
                      [ISO-8601](https://wikipedia.org/wiki/ISO_8601) format
                      when the Query Suggestions index was last updated
                      successfully.
                    example: '2023-07-05T08:03:53Z'
                  lastSuccessfulBuildDuration:
                    type: string
                    description: Duration of the last successful build in seconds.
                    example: 28
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /1/logs/{indexName}:
    get:
      tags:
        - query-suggestions
      operationId: getLogFile
      summary: Get logs.
      description: Get the logs for a single Query Suggestions index.
      parameters:
        - $ref: '#/components/parameters/IndexName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  timestamp:
                    type: string
                    description: >-
                      Timestamp in
                      [ISO-8601](https://wikipedia.org/wiki/ISO_8601) format.
                    example: '2023-07-05T08:03:33.898076171Z'
                  level:
                    $ref: '#/components/schemas/LogLevel'
                  message:
                    type: string
                    description: Details about this log entry.
                    example: >-
                      skipping query "Brooke Adams": not enough search results,
                      got 1, expected 5
                  contextLevel:
                    type: integer
                    description: >
                      Level indicating the position of a suggestion in a
                      hierarchy of records. 


                      For example, a `contextLevel` of 1 indicates that this
                      suggestion belongs to a previous suggestion with
                      `contextLevel` 0.
                    example: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
