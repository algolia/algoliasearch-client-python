post:
  tags:
    - events
  operationId: pushEvents
  summary: Send events.
  description: |
    Send a list of events to the Insights API.

    You can include up to 1,000 events in a single request,
    but the request body must be smaller than 2&nbsp;MB.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          title: InsightsEvents
          type: object
          additionalProperties: false
          required:
            - events
          properties:
            events:
              type: array
              description: |
                List of click and conversion events.

                An event is an object representing a user interaction.
                Events have attributes that describe the interaction,
                such as an event name, a type, or a user token.
                Some attributes require other attributes to be declared,
                and some attributes can't be declared at the same time.

                **All** events must be valid, otherwise the API returns an error.
              minItems: 1
              maxItems: 1000
              items:
                $ref: '../common/schemas/EventsItems.yml'
        examples:
          ClickObjectIDsAfterSearch:
            summary: Click event after search requests.
            value:
              'events':
                - 'eventName': 'Products Clicked'
                  'eventType': 'click'
                  'index': 'test-index'
                  'userToken': 'test-user-1'
                  'objectIDs': ['object-1']
                  'positions': [1]
                  'queryID': '7dfe2ada7bca48bdd0629649df0bee07'
          ConversionObjectIDsAfterSearch:
            summary: Conversion event after search requests.
            value:
              'events':
                - 'eventName': 'Products Added To Cart'
                  'eventType': 'conversion'
                  'index': 'test-index'
                  'userToken': 'test-user-1'
                  'objectIDs': ['object-1']
                  'queryID': '7dfe2ada7bca48bdd0629649df0bee07'                
          ClickObjectIDs:
            summary: Click event.
            value:
              'events':
                - 'eventName': 'Products Clicked'
                  'eventType': 'click'
                  'index': 'test-index'
                  'userToken': 'test-user-1'
                  'objectIDs': ['object-1']
          ConversionObjectIDs:
            summary: Conversion event.
            value:
              'events':
                - 'eventName': 'Products Added To Cart'
                  'eventType': 'conversion'
                  'index': 'test-index'
                  'userToken': 'test-user-1'
                  'objectIDs': ['object-1']
          ClickFilter:
            summary: Click event with filters.
            value:
              'events':
                - 'eventName': 'Category Clicked'
                  'eventType': 'click'
                  'index': 'test-index'
                  'userToken': 'test-user-1'
                  'filters': ['category:books']
          ConversionFilter:
            summary: Conversion event with filters.
            value:
              'events':
                - 'eventName': 'Category Converted'
                  'eventType': 'conversion'
                  'index': 'test-index'
                  'userToken': 'test-user-1'
                  'filters': ['category:books']
          ViewObjectIDs:
            summary: View event.
            value:
              'events':
                - 'eventName': 'Products Viewed'
                  'eventType': 'view'
                  'index': 'test-index'
                  'userToken': 'test-user-1'
                  'objectIDs': ['object-1']
          ViewFilters:
            summary: View event with filters.
            value:
              'events':
                - 'eventName': 'Category Viewed'
                  'eventType': 'view'
                  'index': 'test-index'
                  'userToken': 'test-user-1'
                  'filters': ['category:books']
                  
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../common/schemas/EventsResponse.yml'
          examples:
            Success:
              summary: Events successfully sent to the Insights API.
              description: >-
                Success indicates that the Insights API received the events correctly,
                and that event properties are formatted correctly.
                Success doesn't imply that the event can be used by any Algolia feature.
                For example, the Insights API doesn't check if the index name you provided exists,
                or if the object IDs exist in your index.
              value: {'status': 200, 'message': 'OK'}
    '400':
      description: Bad Request.
      content:
        text/html:
          schema:
            type: string
            title: HTML
          examples:
            BadRequest:
              summary: Bad request.
              description: This error doesn't return a JSON object, but HTML.
              value: 'Error: Bad Request. Your client has issued a malformed or illegal request.'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../common/schemas/EventsResponse.yml'
          examples:
            Unauthorized:
              summary: Invalid credentials.
              description: You need to provide your application ID using the `X-Algolia-Application-ID` header and your (search) API key with the `X-Algolia-API-Key` header.
              value: {'status': 401, 'message': 'Invalid credentials'}
    '404':
      description: Not Found.
      content:
        application/json:
          schema:
            $ref: '../common/schemas/EventsResponse.yml'
          examples:
            NotFound:
              summary: Unsupported operation.
              description: Check that you're using the correct URL.
              value: {'status': 404, 'message': 'Path not supported by Insights REST API. Please have a look at [https://www.algolia.com/doc/rest-api/insights/](https://www.algolia.com/doc/rest-api/insights/) for the list of valid commands.'}
    '405':
      description: Method Not Allowed.
      content:
        application/json:
          schema:
            $ref: '../common/schemas/EventsResponse.yml'
          examples:
            MethodNotAllowed:
              summary: Method not allowed.
              description: Check, that you're using the `POST` method with the Insights API. Other methods aren't supported.
              value: {'status': 405, 'message': 'Method Not Allowed'}
    '413':
      description: Payload Too Large.
      content:
        application/json:
          schema:
            $ref: '../common/schemas/EventsResponse.yml'
          examples:
            PayloadTooLarge:
              summary: Request body larger than 2&nbsp;MB.
              value: {'status': 413, 'message': 'Request Entity Too Large'}
    '422':
      description: Unprocessable Entity.
      content:
        application/json:
          schema:
            $ref: '../common/schemas/EventsResponse.yml'
          examples:
            InvalidPayload:
              summary: Incorrect event object.
              value: {'status': 422, 'message': 'Invalid payload'}
            NoEvents:
              summary: No events.
              description: >-
                This can happen if you're sending an empty `events` array,
                or if you try to send a single event object instead of the `events` array.
              value: {'status': 422, 'message': 'No events to process'}
            NoEventsField:
              summary: Missing events attribute.
              description: This can happen if you try to send an array of events directly instead of using the `events` attribute.
              value: {'status': 422, 'message': 'Invalid type for field : expected insights.PublicEventsBatch, got array'}
            EventNameRequired:
              summary: Missing eventName attribute.
              value: {'status': 422, 'message': 'EventName is required'}
            WrongEventName:
              summary: Event name too long or wrong characters.
              value: {'status': 422, 'message': 'EventName must contain only visible ASCII characters, and be between 1 and 64 characters long'}
            EventTypeRequired:
              summary: Missing eventType attribute.
              value: {'status': 422, 'message': 'EventType is required'}
            WrongEventType:
              summary: Wrong event type.
              value: {'status': 422, 'message': 'EventType must be one of "click", "conversion" or "view"'}
            IndexRequired:
              summary: Missing index attribute.
              value: {'status': 422, 'message': 'The index field is required'}
            UserTokenRequired:
              summary: Missing userToken attribute.
              value: {'status': 422, 'message': 'The userToken field is required'}
            WrongUserToken:
              summary: Malformed user token.
              value: {'status': 422, 'message': 'UserToken must contain only alphanumeric, equal, plus, slash, hyphen, or underscore characters, and be between 1 and 128 characters long'}
            NoObjectIDsOrFilters:
              summary: Missing objectIDs or filters attribute.
              description: Each event must include either the `objectIDs` or `filters` attribute.
              value: {'status': 422, 'message': 'Event should specify either some ObjectIDs or some Filters'}
            BothDefined:
              summary: Both objectIDs and filters attributes defined.
              value: {'status': 422, 'message': 'Event should specify ObjectIDs or Filters, but not both'}
            PositionsOnWrongEventType:
              summary: Wrong combination of positions and eventType attributes.
              value: {'status': 422, 'message': 'Only event of type click should specify the positions attribute'}
            PositionsWithoutQueryID:
              summary: Positions attribute without queryID.
              description: Click events with the `positions` attribute require the `queryID` attribute.
              value: {'status': 422, 'message': 'Event of type click with positions should specify a queryID'}
            WrongPositionsValue:
              summary: Wrong value in positions array.
              description: Any value in the `positions` array must be greater than 0.
              value: {'status': 422, 'message': 'Event of type click may only have strictly positive positions'}
            WrongPositionsItems:
              summary: Wrong number of items in positions array.
              description: >-
                For click events with the `queryID` and `objectIDs` attributes,
                you must include the `positions` attribute with the same number of items as the `objectIDs` attribute.
              value: {'status': 422, 'message': 'Event of type click should have the same number of ObjectIDs and Positions'}
            WrongQueryID:
              summary: Malformed query ID.
              value: {'status': 422, 'message': 'Query ID must be a search query ID (32 characters hexadecimal string)'}
            InvalidDataType:
              summary: Wrong data type.
              description: >-
                This can happen if one or more of the attributes is a number instead of a string.
              value: {'status': 422, 'message': 'Invalid type for field events: expected string, got number'}
            InvalidTimestamp:
              summary: Timestamp too old.
              value: {'status': 422, 'message': 'The timestamp must be at most 4 days in the past'}
            TooManyEvents:
              summary: Too many events.
              description: You can include up to 1,000 events in a single API request.
              value: {'status': 422, 'message': 'Cannot process more than 1000 events in a batch'}
