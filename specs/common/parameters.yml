# path
IndexName:
  name: indexName
  in: path
  description: Index on which to perform the request.
  required: true
  schema:
    type: string
    example: myIndexName

ObjectID:
  name: objectID
  in: path
  description: Unique record (object) identifier.
  required: true
  schema:
    type: string
    example: '123'

# query
Index:
  in: query
  name: index
  description: Index name to target.
  required: true
  schema:
    type: string
    example: YourIndexName

StartDate:
  in: query
  name: startDate
  description: Start date (a string in the format `YYYY-MM-DD`) of the period to analyze.
  schema:
    type: string
    example: 2022-09-19
    pattern: ^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$

EndDate:
  in: query
  name: endDate
  description: End date (a string in the format `YYYY-MM-DD`) of the period to analyze.
  schema:
    type: string
    example: 2023-01-21
    pattern: ^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$

ForwardToReplicas:
  in: query
  name: forwardToReplicas
  description: Indicates whether changed index settings are forwarded to the replica indices.
  schema:
    type: boolean

Page:
  in: query
  name: page
  description: >
    Returns the requested page number. The page size is determined by the `hitsPerPage` parameter. You can see the number of available pages in the `nbPages` response attribute. When `page` is null, the API response is not paginated.
  schema:
    type: integer
    minimum: 0
    nullable: true
    default: null

PageDefault0:
  in: query
  name: page
  description: >
    Returns the requested page number (the first page is 0). Page size is set by `hitsPerPage`. When null, there's no pagination.
  schema:
    type: integer
    nullable: true
    minimum: 0
    default: 0

HitsPerPage:
  in: query
  name: hitsPerPage
  description: Maximum number of hits per page.
  schema:
    type: integer
    default: 100

Offset:
  in: query
  name: offset
  description: Position of the starting record. Used for paging. 0 is the first record.
  schema:
    type: integer
    default: 0

Limit:
  in: query
  name: limit
  description: Number of records to return (page size).
  schema:
    type: integer
    default: 10

# misc
objectID:
  type: string
  description: Unique object identifier.
  example: 'product-1'

id:
  type: string
  example: '12'
  description: Unique identifier of a synonym object.

indexName:
  type: string
  example: products
  description: Algolia index name.

hitsPerPage:
  type: integer
  default: 20
  minimum: 1
  maximum: 1000
  description: Maximum number of hits per page.

query:
  type: string
  description: Full-text query.
  default: ''

page:
  type: integer
  minimum: 0
  description: Requested page (the first page is page 0).

trackedSearchCount:
  type: integer
  example: 2
  description: Number of tracked searches. This is the number of search requests where the `clickAnalytics` parameter is `true`.

count:
  description: Number of occurrences.
  example: 2
  type: integer
