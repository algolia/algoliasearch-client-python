searchParams:
  oneOf:
    - $ref: '#/searchParamsString'
    - $ref: '#/searchParamsObject'

searchParamsObject:
  allOf:
    - $ref: '#/baseSearchParams'
    - $ref: '../../common/schemas/IndexSettings.yml#/indexSettingsAsSearchParams'

baseSearchParams:
  allOf:
    - $ref: '#/searchParamsQuery'
    - $ref: '#/baseSearchParamsWithoutQuery'

searchParamsQuery:
  type: object
  additionalProperties: false
  properties:
    query:
      $ref: '#/query'

baseSearchParamsWithoutQuery:
  type: object
  additionalProperties: false
  properties:
    similarQuery:
      type: string
      description: Overrides the query parameter and performs a more generic search.
      default: ''
      x-categories:
        - Search
    filters:
      $ref: '#/filters'
    facetFilters:
      $ref: '#/facetFilters'
    optionalFilters:
      $ref: '#/optionalFilters'
    numericFilters:
      $ref: '#/numericFilters'
    tagFilters:
      $ref: '#/tagFilters'
    sumOrFiltersScores:
      type: boolean
      description: >
        Determines how to calculate [filter scores](https://www.algolia.com/doc/guides/managing-results/refine-results/filtering/in-depth/filter-scoring/#accumulating-scores-with-sumorfiltersscores).

        If `false`, maximum score is kept.

        If `true`, score is summed.
      default: false
      x-categories:
        - Filtering
    restrictSearchableAttributes:
      type: array
      items:
        type: string
      example: ['title','author']
      description: Restricts a query to only look at a subset of your [searchable attributes](https://www.algolia.com/doc/guides/managing-results/must-do/searchable-attributes/).
      default: []
      x-categories:
        - Filtering
    facets:
      type: array
      items:
        type: string
      description: Returns [facets](https://www.algolia.com/doc/guides/managing-results/refine-results/faceting/#contextual-facet-values-and-counts), their facet values, and the number of matching facet values.
      default: []
      x-categories:
        - Faceting
    facetingAfterDistinct:
      type: boolean
      description: >
        Forces faceting to be applied after [de-duplication](https://www.algolia.com/doc/guides/managing-results/refine-results/grouping/) (with the distinct feature). Alternatively, the `afterDistinct` [modifier](https://www.algolia.com/doc/api-reference/api-parameters/attributesForFaceting/#modifiers) of `attributesForFaceting` allows for more granular control.
      default: false
      x-categories:
        - Faceting
    page:
      $ref: '#/page'
    offset:
      type: integer
      description: >
        Specifies the offset of the first hit to return.

        > **Note**: Using `page` and `hitsPerPage` is the recommended method for [paging results](https://www.algolia.com/doc/guides/building-search-ui/ui-and-ux-patterns/pagination/js/). However, you can use `offset` and `length` to implement [an alternative approach to paging](https://www.algolia.com/doc/guides/building-search-ui/ui-and-ux-patterns/pagination/js/#retrieving-a-subset-of-records-with-offset-and-length).
      x-categories:
        - Pagination
    length:
      type: integer
      description: >
        Sets the number of hits to retrieve (for use with `offset`).

        > **Note**: Using `page` and `hitsPerPage` is the recommended method for [paging results](https://www.algolia.com/doc/guides/building-search-ui/ui-and-ux-patterns/pagination/js/). However, you can use `offset` and `length` to implement [an alternative approach to paging](https://www.algolia.com/doc/guides/building-search-ui/ui-and-ux-patterns/pagination/js/#retrieving-a-subset-of-records-with-offset-and-length).
      minimum: 1
      maximum: 1000
      x-categories:
        - Pagination
    aroundLatLng:
      $ref: '#/aroundLatLng'
    aroundLatLngViaIP:
      $ref: '#/aroundLatLngViaIP'
    aroundRadius:
      $ref: '#/aroundRadius'
    aroundPrecision:
      $ref: '#/aroundPrecision'
    minimumAroundRadius:
      type: integer
      description: Minimum radius (in meters) used for a geographical search when `aroundRadius` isn't set.
      minimum: 1
      x-categories:
        - Geo-Search
    insideBoundingBox:
      $ref: '#/insideBoundingBox'
    insidePolygon:
      $ref: '#/insidePolygon'
    naturalLanguages:
      type: array
      items:
        type: string
      description: Changes the default values of parameters that work best for a natural language query, such as `ignorePlurals`, `removeStopWords`, `removeWordsIfNoResults`, `analyticsTags`, and `ruleContexts`. These parameters work well together when the query consists of fuller natural language strings instead of keywords, for example when processing voice search queries.
      default: []
      x-categories:
        - Languages
    ruleContexts:
      type: array
      items:
        type: string
      description: Assigns [rule contexts](https://www.algolia.com/doc/guides/managing-results/rules/rules-overview/how-to/customize-search-results-by-platform/#whats-a-context) to search queries.
      default: []
      x-categories:
        - Rules
    personalizationImpact:
      type: integer
      description: Defines how much [Personalization affects results](https://www.algolia.com/doc/guides/personalization/personalizing-results/in-depth/configuring-personalization/#understanding-personalization-impact).
      default: 100
      x-categories:
        - Personalization
    userToken:
      type: string
      description: Associates a [user token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken/) with the current search.
      example: '123456'
      x-categories:
        - Personalization
    getRankingInfo:
      type: boolean
      description: Incidates whether the search response includes [detailed ranking information](https://www.algolia.com/doc/guides/building-search-ui/going-further/backend-search/in-depth/understanding-the-api-response/#ranking-information).
      default: false
      x-categories:
        - Advanced
    explain:
      type: array
      items:
        type: string
      description: Enriches the API's response with information about how the query was processed.
      default: []
      x-categories:
        - Advanced
    synonyms:
      type: boolean
      description: Whether to take into account an index's synonyms for a particular search.
      default: true
      x-categories:
        - Advanced
    clickAnalytics:
      type: boolean
      description: Indicates whether a query ID parameter is included in the search response. This is required for [tracking click and conversion events](https://www.algolia.com/doc/guides/sending-events/concepts/event-types/#events-related-to-algolia-requests).
      default: false
      x-categories:
        - Analytics
    analytics:
      type: boolean
      description: Indicates whether this query will be included in [analytics](https://www.algolia.com/doc/guides/search-analytics/guides/exclude-queries/).
      default: true
      x-categories:
        - Analytics
    analyticsTags:
      type: array
      items:
        type: string
      description: Tags to apply to the query for [segmenting analytics data](https://www.algolia.com/doc/guides/search-analytics/guides/segments/).
      default: []
      x-categories:
        - Analytics
    percentileComputation:
      type: boolean
      description: Whether to include or exclude a query from the processing-time percentile computation.
      default: true
      x-categories:
        - Advanced
    enableABTest:
      type: boolean
      description: Incidates whether this search will be considered in A/B testing.
      default: true
      x-categories:
        - Advanced

searchParamsString:
  type: object
  additionalProperties: false
  x-discriminator-fields:
    - params
  properties:
    params:
      $ref: '#/paramsAsString'

paramsAsString:
  description: Search parameters as a URL-encoded query string.
  example: 'hitsPerPage=2&getRankingInfo=1'
  type: string
  default: ''

query:
  type: string
  description: Text to search for in an index.
  default: ''
  x-categories:
    - Search

page:
  type: integer
  description: Page to retrieve (the first page is `0`, not `1`).
  default: 0
  x-categories:
    - Pagination

aroundRadius:
  description: >
    [Maximum radius](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/#increase-the-search-radius) for a geographical search (in meters).
  oneOf:
    - type: integer
      minimum: 1
    - $ref: '#/aroundRadiusAll'
  x-categories:
    - Geo-Search

aroundPrecision:
  description: Precision of a geographical search (in meters), to [group results that are more or less the same distance from a central point](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/in-depth/geo-ranking-precision/).
  oneOf:
    - type: integer
      default: 10
    - $ref: '#/aroundPrecisionFromValue'
  x-categories:
    - Geo-Search

aroundPrecisionFromValue:
  description: Precision of a geographical search (in meters), to [group results that are more or less the same distance from a central point](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/in-depth/geo-ranking-precision/).
  type: array
  items:
    type: object
    properties:
      from:
        type: integer
      value:
        type: integer

aroundRadiusAll:
  type: string
  enum: [all]

aroundLatLng:
  type: string
  description: Search for entries [around a central location](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/#filter-around-a-central-point), enabling a geographical search within a circular area.
  example: '40.71,-74.01'
  default: ''
  x-categories:
    - Geo-Search

aroundLatLngViaIP:
  type: boolean
  description: Search for entries around a location. The location is automatically computed from the requester's IP address.
  default: false
  x-categories:
    - Geo-Search

insideBoundingBox:
  type: array
  items:
    type: number
    format: double
  description: Search inside a [rectangular area](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/#filtering-inside-rectangular-or-polygonal-areas) (in geographical coordinates).
  example: [46.650828100116044,7.123046875,45.17210966999772,1.009765625]
  x-categories:
    - Geo-Search

insidePolygon:
  type: array
  items:
    type: number
    format: double
  description: Search inside a [polygon](https://www.algolia.com/doc/guides/managing-results/refine-results/geolocation/#filtering-inside-rectangular-or-polygonal-areas) (in geographical coordinates).
  example: [46.650828100116044,7.123046875,45.17210966999772,1.009765625,49.62625916704081,4.6181640625]
  x-categories:
    - Geo-Search

# There is duplicated logic here because we want to keep a correct description
# and using `$ref` override everything.
searchFiltersArrayString:
  type: array
  items:
    type: string

mixedSearchFilters:
  oneOf:
    - $ref: '#/searchFiltersArrayString'
    - type: string

listOfSearchFilters:
  type: array
  items:
    $ref: '#/mixedSearchFilters'

filters:
  type: string
  description: >
    [Filter](https://www.algolia.com/doc/guides/managing-results/refine-results/filtering/) the query with numeric, facet, or tag filters.
  example: '(category:Book OR category:Ebook) AND _tags:published'
  default: ''
  x-categories:
    - Filtering

facetFilters:
  description: >
    [Filter hits by facet value](https://www.algolia.com/doc/api-reference/api-parameters/facetFilters/).
  example: ['category:Book','author:John Doe']
  oneOf:
    - $ref: '#/listOfSearchFilters'
    - type: string
  x-categories:
    - Filtering

tagFilters:
  description: >
    [Filter hits by tags](https://www.algolia.com/doc/api-reference/api-parameters/tagFilters/).
  example: [['Book','Movie'],'SciFi']
  oneOf:
    - $ref: '#/listOfSearchFilters'
    - type: string
  x-categories:
    - Filtering

numericFilters:
  description: >
    [Filter on numeric attributes](https://www.algolia.com/doc/api-reference/api-parameters/numericFilters/).
  example: [['inStock = 1','deliveryDate < 1441755506'],'price < 1000']
  oneOf:
    - $ref: '#/listOfSearchFilters'
    - type: string
  x-categories:
    - Filtering

optionalFilters:
  description: |
    Create filters to boost or demote records. 
    
    Records that match the filter are ranked higher for positive and lower for negative optional filters. In contrast to regular filters, records that don't match the optional filter are still included in the results, only their ranking is affected.
  example: ['category:Book','author:John Doe']
  oneOf:
    - $ref: '#/listOfSearchFilters'
    - type: string
  x-categories:
    - Filtering
