indexSettings:
  description: Algolia index settings.
  allOf:
    - $ref: '#/baseIndexSettings'
    - $ref: '#/indexSettingsAsSearchParams'

baseIndexSettings:
  type: object
  additionalProperties: false
  properties:
    replicas:
      type: array
      items:
        type: string
      example: [virtual(prod_products_price_asc),dev_products_replica]
      description: Creates [replicas](https://www.algolia.com/doc/guides/managing-results/refine-results/sorting/in-depth/replicas/), which are copies of a primary index with the same records but different settings.
      default: []
      x-categories:
        - Ranking
    paginationLimitedTo:
      type: integer
      example: 20
      description: Maximum number of hits accessible through pagination.
      default: 1000
    unretrievableAttributes:
      type: array
      items:
        type: string
      example: [popularity]
      description: Attributes that can't be retrieved at query time.
      default: []
      x-categories:
        - Attributes
    disableTypoToleranceOnWords:
      type: array
      items:
        type: string
      example: ['wheel','1X2BCD']
      description: Words for which you want to turn off [typo tolerance](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/typo-tolerance/).
      default: []
      x-categories:
        - Typos
    attributesToTransliterate:
      description: Attributes in your index to which [Japanese transliteration](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/language-specific-configurations/#japanese-transliteration-and-type-ahead) applies. This will ensure that words indexed in Katakana or Kanji can also be searched in Hiragana.
      type: array
      items:
        type: string
      example: ['name','description']
      x-categories:
        - Languages
    camelCaseAttributes:
      type: array
      items:
        type: string
      example: ['description']
      description: Attributes on which to split [camel case](https://wikipedia.org/wiki/Camel_case) words.
      default: []
      x-categories:
        - Languages
    decompoundedAttributes:
      type: object
      example: {de: ['name']}
      description: Attributes in your index to which [word segmentation](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/how-to/customize-segmentation/) (decompounding) applies.
      default: {}
      x-categories:
        - Languages
    indexLanguages:
      type: array
      items:
        type: string
      example: ['ja']
      description: Set the languages of your index, for language-specific processing steps such as [tokenization](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/tokenization/) and [normalization](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/normalization/).
      default: []
      x-categories:
        - Languages
    disablePrefixOnAttributes:
      type: array
      items:
        type: string
      example: ['sku']
      description: Attributes for which you want to turn off [prefix matching](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/override-search-engine-defaults/#adjusting-prefix-search).
      default: []
      x-categories:
        - Query strategy
    allowCompressionOfIntegerArray:
      type: boolean
      description: >
        Incidates whether the engine compresses arrays with exclusively non-negative integers.

        When enabled, the compressed arrays may be reordered.
      default: false
      x-categories:
        - Performance
    numericAttributesForFiltering:
      type: array
      items:
        type: string
      description: Numeric attributes that can be used as [numerical filters](https://www.algolia.com/doc/guides/managing-results/rules/detecting-intent/how-to/applying-a-custom-filter-for-a-specific-query/#numerical-filters).
      example: ['quantity','popularity']
      default: []
      x-categories:
        - Performance
    separatorsToIndex:
      type: string
      example: +#
      description: Controls which separators are added to an Algolia index as part of [normalization](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/#what-does-normalization-mean). Separators are all non-letter characters except spaces and currency characters, such as $€£¥.
      default: ''
      x-categories:
        - Typos
    searchableAttributes:
      type: array
      items:
        type: string
      example: ['title,alternative_title','author','unordered(text)','emails.personal']
      description: >
        [Attributes used for searching](https://www.algolia.com/doc/guides/managing-results/must-do/searchable-attributes/), including determining [if matches at the beginning of a word are important (ordered) or not (unordered)](https://www.algolia.com/doc/guides/managing-results/must-do/searchable-attributes/how-to/configuring-searchable-attributes-the-right-way/#understanding-word-position).
      default: []
      x-categories:
        - Attributes
    userData:
      $ref: '#/userData'
    customNormalization:
      description: A list of characters and their normalized replacements to override Algolia's default [normalization](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/normalization/).
      type: object
      example: > 
        {default: {'ä': 'ae', 'ü': 'ue'}}
      additionalProperties:
        type: object
        additionalProperties:
          type: string
      x-categories:
        - Languages

indexSettingsAsSearchParams:
  type: object
  additionalProperties: false
  properties:
    attributesForFaceting:
      type: array
      items:
        type: string
      example: ['author','filterOnly(isbn)','searchable(edition)','afterDistinct(category)','afterDistinct(searchable(publisher))']
      description: >
        Attributes used for [faceting](https://www.algolia.com/doc/guides/managing-results/refine-results/faceting/) and the [modifiers](https://www.algolia.com/doc/api-reference/api-parameters/attributesForFaceting/#modifiers) that can be applied: `filterOnly`, `searchable`, and `afterDistinct`.
      default: []
      x-categories:
        - Faceting
    attributesToRetrieve:
      type: array
      items:
        type: string
      example: ['author','title','content']
      description: Attributes to include in the API response. To reduce the size of your response, you can retrieve only some of the attributes. By default, the response includes all attributes.
      default: ['*']
      x-categories:
        - Attributes
    ranking:
      type: array
      items:
        type: string
      description: Determines the order in which Algolia [returns your results](https://www.algolia.com/doc/guides/managing-results/relevance-overview/in-depth/ranking-criteria/).
      default:
        - typo
        - geo
        - words
        - filters
        - proximity
        - attribute
        - exact
        - custom
      x-categories:
        - Ranking
    customRanking:
      type: array
      items:
        type: string
      example: ['desc(popularity)','asc(price)']
      description: >
        Specifies the [Custom ranking criterion](https://www.algolia.com/doc/guides/managing-results/must-do/custom-ranking/). Use the `asc` and `desc` modifiers to specify the ranking order: ascending or descending.
      default: []
      x-categories:
        - Ranking
    relevancyStrictness:
      type: integer
      example: 90
      description: Relevancy threshold below which less relevant results aren't included in the results.
      default: 100
      x-categories:
        - Ranking
    attributesToHighlight:
      type: array
      items:
        type: string
      example: ['author','title','content']
      description: Attributes to highlight. Strings that match the search query in the attributes are highlighted by surrounding them with HTML tags (`highlightPreTag` and `highlightPostTag`).
      x-categories:
        - Highlighting and Snippeting
    attributesToSnippet:
      type: array
      items:
        type: string
      example: ['content:80','description']
      description: >
        Attributes to _snippet_. 'Snippeting' is shortening the attribute to a certain number of words. If not specified, the attribute is shortened to the 10 words around the matching string but you can specify the number. For example: `body:20`.
      default: []
      x-categories:
        - Highlighting and Snippeting
    highlightPreTag:
      type: string
      description: HTML string to insert before the highlighted parts in all highlight and snippet results.
      default: <em>
      x-categories:
        - Highlighting and Snippeting
    highlightPostTag:
      type: string
      description: HTML string to insert after the highlighted parts in all highlight and snippet results.
      default: </em>
      x-categories:
        - Highlighting and Snippeting
    snippetEllipsisText:
      type: string
      description: String used as an ellipsis indicator when a snippet is truncated.
      default: …
      x-categories:
        - Highlighting and Snippeting
    restrictHighlightAndSnippetArrays:
      type: boolean
      description: Restrict highlighting and snippeting to items that matched the query.
      default: false
      x-categories:
        - Highlighting and Snippeting
    hitsPerPage:
      $ref: '#/hitsPerPage'
    minWordSizefor1Typo:
      type: integer
      description: Minimum number of characters a word in the query string must contain to accept matches with [one typo](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/typo-tolerance/in-depth/configuring-typo-tolerance/#configuring-word-length-for-typos).
      default: 4
      x-categories:
        - Typos
    minWordSizefor2Typos:
      type: integer
      description: Minimum number of characters a word in the query string must contain to accept matches with [two typos](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/typo-tolerance/in-depth/configuring-typo-tolerance/#configuring-word-length-for-typos).
      default: 8
      x-categories:
        - Typos
    typoTolerance:
      $ref: '#/typoTolerance'
    allowTyposOnNumericTokens:
      type: boolean
      description: Whether to allow typos on numbers ("numeric tokens") in the query string.
      default: true
      x-categories:
        - Typos
    disableTypoToleranceOnAttributes:
      type: array
      items:
        type: string
      example: ['sku']
      description: Attributes for which you want to turn off [typo tolerance](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/typo-tolerance/).
      default: []
      x-categories:
        - Typos
    ignorePlurals:
      $ref: '#/ignorePlurals'
    removeStopWords:
      $ref: '#/removeStopWords'
    keepDiacriticsOnCharacters:
      type: string
      example: øé
      description: Characters that the engine shouldn't automatically [normalize](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/normalization/).
      default: ''
      x-categories:
        - Languages
    queryLanguages:
      type: array
      items:
        type: string
      example: ['es']
      description: Sets your user's search language. This adjusts language-specific settings and features such as `ignorePlurals`, `removeStopWords`, and [CJK](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/normalization/#normalization-for-logogram-based-languages-cjk) word detection.
      default: []
      x-categories:
        - Languages
    decompoundQuery:
      type: boolean
      description: >
        [Splits compound words](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/language-specific-configurations/#splitting-compound-words) into their component word parts in the query.
      default: true
      x-categories:
        - Languages
    enableRules:
      type: boolean
      description: Incidates whether [Rules](https://www.algolia.com/doc/guides/managing-results/rules/rules-overview/) are enabled.
      default: true
      x-categories:
        - Rules
    enablePersonalization:
      type: boolean
      description: Incidates whether [Personalization](https://www.algolia.com/doc/guides/personalization/what-is-personalization/) is enabled.
      default: false
      x-categories:
        - Personalization
    queryType:
      $ref: '#/queryType'
    removeWordsIfNoResults:
      $ref: '#/removeWordsIfNoResults'
    mode:
      $ref: '#/mode'
    semanticSearch:
      $ref: '#/semanticSearch'
    advancedSyntax:
      type: boolean
      description: Enables the [advanced query syntax](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/override-search-engine-defaults/#advanced-syntax).
      default: false
      x-categories:
        - Query strategy
    optionalWords:
      type: array
      items:
        type: string
      example: ['blue','iphone case']
      description: Words which should be considered [optional](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/empty-or-insufficient-results/#creating-a-list-of-optional-words) when found in a query.
      default: []
      x-categories:
        - Query strategy
    disableExactOnAttributes:
      type: array
      items:
        type: string
      example: ['description']
      description: Attributes for which you want to [turn off the exact ranking criterion](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/override-search-engine-defaults/in-depth/adjust-exact-settings/#turn-off-exact-for-some-attributes).
      default: []
      x-categories:
        - Query strategy
    exactOnSingleWordQuery:
      $ref: '#/exactOnSingleWordQuery'
    alternativesAsExact:
      type: array
      items:
        $ref: '#/alternativesAsExact'
      description: Alternatives that should be considered an exact match by [the exact ranking criterion](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/override-search-engine-defaults/in-depth/adjust-exact-settings/#turn-off-exact-for-some-attributes).
      default: [ignorePlurals, singleWordSynonym]
      x-categories:
        - Query strategy
    advancedSyntaxFeatures:
      type: array
      items:
        $ref: '#/advancedSyntaxFeatures'
      description: Allows you to specify which advanced syntax features are active when `advancedSyntax` is enabled.
      default: [exactPhrase, excludeWords]
      x-categories:
        - Query strategy
    distinct:
      $ref: '#/distinct'
    attributeForDistinct:
      description: Name of the deduplication attribute to be used with Algolia's [_distinct_ feature](https://www.algolia.com/doc/guides/managing-results/refine-results/grouping/#introducing-algolias-distinct-feature).
      example: 'url'
      type: string
    replaceSynonymsInHighlight:
      type: boolean
      description: Whether to highlight and snippet the original word that matches the synonym or the synonym itself.
      default: false
      x-categories:
        - Highlighting and Snippeting
    minProximity:
      type: integer
      minimum: 1
      maximum: 7
      description: Precision of the [proximity ranking criterion](https://www.algolia.com/doc/guides/managing-results/relevance-overview/in-depth/ranking-criteria/#proximity).
      default: 1
      x-categories:
        - Advanced
    responseFields:
      type: array
      items:
        type: string
      description: Attributes to include in the API response for search and browse queries.
      default: []
      x-categories:
        - Advanced
    maxFacetHits:
      $ref: '#/maxFacetHits'
    maxValuesPerFacet:
      type: integer
      description: Maximum number of facet values to return for each facet.
      default: 100
      x-categories:
        - Faceting
    sortFacetValuesBy:
      type: string
      description: Controls how facet values are fetched.
      default: count
      x-categories:
        - Faceting
    attributeCriteriaComputedByMinProximity:
      type: boolean
      description: When the [Attribute criterion is ranked above Proximity](https://www.algolia.com/doc/guides/managing-results/relevance-overview/in-depth/ranking-criteria/#attribute-and-proximity-combinations) in your ranking formula, Proximity is used to select which searchable attribute is matched in the Attribute ranking stage.
      default: false
      x-categories:
        - Advanced
    renderingContent:
      $ref: '#/renderingContent'
    enableReRanking:
      type: boolean
      description: Indicates whether this search will use [Dynamic Re-Ranking](https://www.algolia.com/doc/guides/algolia-ai/re-ranking/).
      default: true
      x-categories:
        - Filtering
    reRankingApplyFilter:
      $ref: '#/reRankingApplyFilter'

maxFacetHits:
  type: integer
  description: Maximum number of facet hits to return when [searching for facet values](https://www.algolia.com/doc/guides/managing-results/refine-results/faceting/#search-for-facet-values).
  maximum: 100
  default: 10
  x-categories:
    - Advanced

reRankingApplyFilter:
  description: When [Dynamic Re-Ranking](https://www.algolia.com/doc/guides/algolia-ai/re-ranking/) is enabled, only records that match these filters will be affected by Dynamic Re-Ranking.
  nullable: true
  oneOf:
    - $ref: './SearchParams.yml#/listOfSearchFilters'
    - type: string
      x-categories:
        - Filtering

hitsPerPage:
  type: integer
  description: Number of hits per page.
  default: 20
  minimum: 1
  maximum: 1000
  x-categories:
    - Pagination

userData:
  example: {'settingID': 'f2a7b51e3503acc6a39b3784ffb84300','pluginVersion': '1.6.0'}
  description: Lets you store custom data in your indices.
  default: {}
  x-categories:
    - Advanced

queryType:
  type: string
  enum: [prefixLast, prefixAll, prefixNone]
  description: Determines how query words are [interpreted as prefixes](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/override-search-engine-defaults/in-depth/prefix-searching/).
  default: prefixLast
  x-categories:
    - Query strategy

mode:
  type: string
  enum: ['neuralSearch', 'keywordSearch']
  description: Search mode the index will use to query for results.
  default: keywordSearch
  x-categories:
    - Query strategy

removeWordsIfNoResults:
  type: string
  enum: [none, lastWords, firstWords, allOptional]
  example: firstWords
  description: Strategy to [remove words](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/empty-or-insufficient-results/in-depth/why-use-remove-words-if-no-results/) from the query when it doesn't match any hits.
  default: none
  x-categories:
    - Query strategy

exactOnSingleWordQuery:
  type: string
  enum: [attribute, none, word]
  description: Determines how the [Exact ranking criterion](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/override-search-engine-defaults/in-depth/adjust-exact-settings/#turn-off-exact-for-some-attributes) is computed when the query contains only one word.
  default: attribute
  x-categories:
    - Query strategy

alternativesAsExact:
  type: string
  enum: [ignorePlurals, singleWordSynonym, multiWordsSynonym]
  x-categories:
    - Query strategy

advancedSyntaxFeatures:
  type: string
  enum: [exactPhrase, excludeWords]
  x-categories:
    - Query strategy

distinct:
  description: Enables [deduplication or grouping of results (Algolia's _distinct_ feature](https://www.algolia.com/doc/guides/managing-results/refine-results/grouping/#introducing-algolias-distinct-feature)).
  example: 1
  oneOf:
    - type: boolean
    - type: integer
      minimum: 0
      maximum: 4
      default: 0
  x-categories:
    - Advanced

typoTolerance:
  description: Controls whether [typo tolerance](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/typo-tolerance/) is enabled and how it is applied.
  oneOf:
    - type: boolean
      default: true
    - $ref: '#/typoToleranceEnum'
  x-categories:
    - Typos

typoToleranceEnum:
  type: string
  enum: [min, strict]

ignorePlurals:
  description: >
    Treats singular, plurals, and other forms of declensions as matching terms.

    `ignorePlurals` is used in conjunction with the `queryLanguages` setting.

    _list_: language ISO codes for which ignoring plurals should be enabled. This list will override any values that you may have set in `queryLanguages`.
    _true_: enables the ignore plurals feature, where singulars and plurals are considered equivalent ("foot" = "feet"). The languages supported here are either [every language](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/supported-languages/) (this is the default) or those set by `queryLanguages`.
    _false_: turns off the ignore plurals feature, so that singulars and plurals aren't considered to be the same ("foot" will not find "feet").
  example: ['ca','es']
  oneOf:
    - type: array
      items:
        type: string
    - type: boolean
      default: false
  x-categories:
    - Languages

removeStopWords:
  description: >
    Removes stop (common) words from the query before executing it.

    `removeStopWords` is used in conjunction with the `queryLanguages` setting.

    _list_: language ISO codes for which stop words should be enabled. This list will override any values that you may have set in `queryLanguages`.
    _true_: enables the stop words feature, ensuring that stop words are removed from consideration in a search. The languages supported here are either [every language](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/handling-natural-languages-nlp/in-depth/supported-languages/) (this is the default) or those set by `queryLanguages`.
    _false_: turns off the stop words feature, allowing stop words to be taken into account in a search.
  example: ['ca','es']
  oneOf:
    - type: array
      items:
        type: string
    - type: boolean
      default: false
  x-categories:
    - Languages

renderingContent:
  description: Extra content for the search UI, for example, to control the [ordering and display of facets](https://www.algolia.com/doc/guides/managing-results/rules/merchandising-and-promoting/how-to/merchandising-facets/#merchandise-facets-and-their-values-in-the-manual-editor). You can set a default value and dynamically override it with [Rules](https://www.algolia.com/doc/guides/managing-results/rules/rules-overview/).
  type: object
  additionalProperties: false
  properties:
    facetOrdering:
      $ref: '#/facetOrdering'
  x-categories:
    - Advanced

facetOrdering:
  description: Defines the ordering of facets (widgets).
  type: object
  additionalProperties: false
  properties:
    facets:
      $ref: '#/facets'
    values:
      $ref: '#/values'

facets:
  description: Ordering of facets (widgets).
  type: object
  additionalProperties: false
  properties:
    order:
      $ref: '#/order'

values:
  description: Ordering of facet values within an individual facet.
  type: object
  additionalProperties:
    $ref: '#/value'

value:
  type: object
  additionalProperties: false
  properties:
    order:
      $ref: '#/order'
    sortRemainingBy:
      $ref: '#/sortRemainingBy'

order:
  description: Pinned order of facet lists.
  type: array
  items:
    type: string

sortRemainingBy:
  description: >
    How to display the remaining items:
    
      - `count`: facet count (descending).
      - `alpha`: alphabetical (ascending).
      - `hidden`: show only pinned values.
  type: string
  enum: [count, alpha, hidden]

semanticSearch:
  type: object
  description: >
    Settings for the semantic search part of NeuralSearch.
    Only used when `mode` is _neuralSearch_.
  properties:
    eventSources:
      description: Indices from which to collect click and conversion events. If null, the current index and replica group will be used as the event source.
      nullable: true
      type: array
      items:
        type: string
